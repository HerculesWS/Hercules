//================= Hercules Script =======================================
//=       _   _                     _
//=      | | | |                   | |
//=      | |_| | ___ _ __ ___ _   _| | ___  ___
//=      |  _  |/ _ \ '__/ __| | | | |/ _ \/ __|
//=      | | | |  __/ | | (__| |_| | |  __/\__ \
//=      \_| |_/\___|_|  \___|\__,_|_|\___||___/
//================= License ===============================================
//= This file is part of Hercules.
//= http://herc.ws - http://github.com/HerculesWS/Hercules
//=
//= Copyright (C) 2012-2015  Hercules Dev Team
//= Copyright (C)  Euphy
//= Copyright (C)  Joseph
//= Copyright (C)  Gepard
//= Copyright (C)  L0ne_W0lf
//=
//= Hercules is free software: you can redistribute it and/or modify
//= it under the terms of the GNU General Public License as published by
//= the Free Software Foundation, either version 3 of the License, or
//= (at your option) any later version.
//=
//= This program is distributed in the hope that it will be useful,
//= but WITHOUT ANY WARRANTY; without even the implied warranty of
//= MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//= GNU General Public License for more details.
//=
//= You should have received a copy of the GNU General Public License
//= along with this program.  If not, see <http://www.gnu.org/licenses/>.
//=========================================================================
//= Endless Tower
//================= Description ===========================================
//= Endless Tower Memorial Dungeon.
//= Consists of 101 floors.
//================= Current Version =======================================
//= 2.4
//=========================================================================

alberta,214,77,6	script	Captain Janssen	4_M_SEAMAN,{
	if (checkweight(Knife, 1) == 0) {
		mes("^008800Wait here!!");
		mes("You're carrying too much stuff. Why don't you put some of it away, and then come back.^000000");
		close();
	}
	if (BaseLevel < 50) {
		mes("[Captain Janssen]");
		mes("Sigh... I don't know if I can ever go back to sailing the sea...");
		close();
	}
	.@name$ = strcharinfo(PC_NAME);
	if (in_102tower == 1) {
		mes("^0000ffLooking incredibly excited, the old man ran into the marine shop hurriedly ordering goods. You don't have anything better to do, so you decide to ask him why he is in such a rush.^000000");
		next();
		mes("^0000ffThe old man, after finishing his orders, walks towards you.^000000");
		next();
		mes("[Captain Janssen]");
		mes("I was touched when you accepted a request from me, a stranger, so easily. You must truly be one of those good, heroic adventurers. Are you interested in setting out on an ocean voyage?");
		next();
		mesf("[%s]", .@name$);
		mes("I've sailed a few times... But now that I think about it, I've never gone across the continent.");
		next();
		mes("[Captain Janssen]");
		mes("No, that's good enough. I may just have one small fishing vessel, but I used to be a captain that commanded a fleet.");
		next();
		mes("[Captain Janssen]");
		mes("As you may know after a few sea voyages, not many people have gone across the ocean beyond the continent. I too have failed to conquer the ocean.");
		next();
		mes("^0000ffMr. Janssen talked about his perilous ocean journeys for quite a while. You have enough time on your hands, so you sit down, quietly listening to his story.^000000");
		next();
		mes("^0000ffAt least half of his story sounded grossly exaggerated, but something caught your ear: he insists that a humongous tower exists on the ocean, and that it's so tall, it scrapes across the sky.^000000");
		in_102tower = 2;
		close();
	} else if (in_102tower == 2) {
		mes("[Captain Janssen]");
		mes("So all I could do was cast anchor at that humongous tower after my fleet was wrecked. At first, we were only going to stay there until the rainstorm was over, but it didn't end as soon as we had hoped.");
		next();
		mes("[Captain Janssen]");
		mes("My crew was starving, and a few of them walked into the tower in order to find food... They never came back.");
		next();
		mesf("[%s]", .@name$);
		mes("Why didn't you go in there with them?");
		next();
		mes("[Captain Janssen]");
		mes("My instincts told me that tower was dangerous. I was curious, but I wasn't going to risk my life. We waited for them to come back for 7 days until the rainstorm was finally over, but no one returned.");
		next();
		mes("[Captain Janssen]");
		mes("In our desperation to survive, we abandoned all our goods, and left the tower only with a little bit of the water and edible plants we'd found around the tower. When we finally reached land, I was the only one alive...");
		next();
		mes("^0000ffYou could imagine the heartwretching scene of the dying fleet on their last voyage, even if he didn't explain it any further. A look of somber regret swept over his face as he remained silent a while, and then he said:^000000");
		next();
		mes("[Captain Janssen]");
		mes("I have something I must do before I die. I must retrieve the remains of my crew that died in the tower, and give them a proper burial.");
		next();
		mes("[Captain Janssen]");
		mes("I feel so lucky to meet a warm-hearted adventurer like you. With the money you've given me, I can finally go sailing to the tower again.");
		next();
		mesf("[%s]", .@name$);
		mes("How about hiring me as your first mate?");
		next();
		mes("[Captain Janssen]");
		mes("Thank you, but it is an extremely dangerous place. I have my duty to fulfill, but you don't have any obligation to me or them. I don't wish to sacrifice someone as young as you to such a dangerous place.");
		next();
		mesf("[%s]", .@name$);
		mes("No...");
		mes(".");
		mes(".");
		mes("As an adventurer, there's my obligation to those in need. I'm also very curious about that place...");
		next();
		mes("[Captain Janssen]");
		mes("I was going to leave right away, but since you've joined me, I should give you time to prepare. I'll be waiting here until you're ready to go.");
		next();
		mes("[Captain Janssen]");
		mes("...Okay then...");
		mes("Welcome aboard, first mate.");
		in_102tower = 3;
		close();
	} else if (in_102tower == 3) {
		mes("[Captain Janssen]");
		mes("Shall we leave now?");
		next();
		switch (select("Yes, let's go!", "No, I'm not quite ready...")) {
		case 1:
			mes("[Captain Janssen]");
			mes("Then pull up the anchor, first mate!");
			close2();
			in_102tower = 4;
			warp("e_tower", 70, 114);
			end;
		case 2:
			mes("[Captain Janssen]");
			mes("Sure, no problem. Come back when you're ready.");
			close();
		}
	} else if (in_102tower > 3) {
		mes("[Captain Janssen]");
		mes("Well, to travel the ocean again, we need to restock on goods. If you give me 10,000 Zeny, I'll take care of the rest.");
		next();
		switch (select("I'll come back later.", "Let's go, now!")) {
		case 1:
			mesf("[%s]", .@name$);
			mes("I'm sorry, but I don't have that much money. I'll come back when I save enough.");
			next();
			mes("[Captain Janssen]");
			mes("Sure, no problem. I'll be waiting for your return.");
			close();
		case 2:
			if (Zeny < 10000) {
				mes("[Captain Janssen]");
				mes("I'm sorry, but you don't have enough money. I need at least 10,000 Zeny to restock our supplies...");
				close();
			} else {
				mes("[Captain Janssen]");
				mes("Excellent! Now we're good to go. Let's pull up the anchor again!");
				Zeny -= 10000;
				close2();
				warp("e_tower", 70, 114);
				end;
			}
		}
	} else {
		mes("[Captain Janssen]");
		mes("Excuse me, are you an adventurer?");
		next();
		mes("[Captain Janssen]");
		mes("I'm sorry to ask you this, especially when this is the first time we've ever met, but can you do me a favor? I'll make it short.");
		next();
		mes("[Captain Janssen]");
		mes("Can you donate ^0000ff10,000 Zeny^000000 to me? It's for a cause that's important to me...");
		next();
		switch (select("No!", "Sure thing.")) {
		case 1:
			mesf("[%s]", .@name$);
			mes("I'm sorry, but you've got the wrong person to ask that.");
			next();
			mes("[Captain Janssen]");
			mes("I see... Sorry to bother you. I understand it was too rude to ask something like that to begin with.");
			close();
		case 2:
			mes("[Captain Janssen]");
			mes("Huh? Are you sure that you don't mind giving me that much money? Wow, thank you so much!");
			next();
			if (Zeny < 10000) {
				mes("[Captain Janssen]");
				mes("...I'm sorry, but I don't think you have 10,000 Zeny. Thank you for your kindness, but I need more than that.");
				close();
			} else {
				mesf("[%s]", .@name$);
				mes("I don't know why you'd need so much money, but here. You can take it.");
				next();
				mes("^0000ffYou have donated 10,000 Zeny to Captain Janssen^000000.");
				next();
				mes("[Captain Janssen]");
				mes("Thank you so much! Now I can stock up on food and materials for my ship. You're kind, very kind!");
				Zeny -= 10000;
				in_102tower = 1;
				close();
			}
		}
	}
}

e_tower,81,105,0	script	Tower Protection Stone	2_MONEMUS,{

	.@party_id = getcharid(CHAR_ID_PARTY);
	.@p_name$ = getpartyname(.@party_id);
	.@md_name$ = _("Endless Tower");

	.@etower_timer = questprogress(60200, PLAYTIME); // 1 week
	.@etower_timer2 = questprogress(60201, PLAYTIME); // 4 hours

	if (!instance_check_party(.@party_id, 2)) {
		mes("Make or join a party with more than 1 member and try again.");
		close();
	}
	if (!.@etower_timer) {
		if (getcharid(CHAR_ID_CHAR) == getpartyleader(.@party_id, 2)) {
			mes("Confirmed the party has been made. Would you like to reserve entrance to the Endless Tower?");
			next();
			.@str$ = sprintf(_$("Generate Dungeon %s"), .@md_name$);
			switch (select(.@str$, "Enter the Dungeon", "Return to Alberta", "Cancel")) {
			case 1:
				.@instance = instance_create(.@md_name$, .@party_id);
				if (.@instance < 0) {
					mesf("Party Name: %s", .@p_name$);
					mesf("Party Leader: %s", strcharinfo(PC_NAME));
					mesf("^0000ff%s ^000000- Reservation Failed!", .@md_name$);
					close();
				}
				mesf("^0000ff%s^000000 - Try to reserve", .@md_name$);
				mes("After making a reservation, you have to talk to NPC behind and select the menu 'Enter the Dungeon' to enter the dungeon.");
				for (.@i = 1; .@i <= 6; ++.@i) {
					if (instance_attachmap(.@i + "@tower", .@instance) == "") {
						mesf("^0000ff%s ^000000- Reservation Failed!", .@md_name$);
						instance_destroy(.@instance);
						close();
					}
				}
				instance_set_timeout(14400, 300, .@instance);
				instance_init(.@instance);
				close();
			case 2:
				callsub(L_Enter, 0, 1, .@md_name$, .@p_name$);
			case 3:
				mes("I will move you to Alberta.");
				close2();
				warp("alberta", 223, 36);
				end;
			case 4:
				close();
			}
		}
		mes("If you have the dungeon generated already, you can enter it.");
		next();
		switch (select("Enter the Dungeon", "Return to Alberta", "Cancel")) {
		case 1:
			callsub(L_Enter, 1, 1, .@md_name$, .@p_name$);
		case 2:
			mes("I will move you to Alberta.");
			close2();
			warp("alberta", 223, 36);
			end;
		case 3:
			end;
		}
	} else if (.@etower_timer == 1 && .@etower_timer2 == 2) {

		.@dun_lim_time = etower_timer + 604800; // 1 week
		.@dun_lim_time2 = etower_timer + 14400; // 4 hours
		.@dun_cur_time = gettimetick(2);
		.@dun_ent_t = .@dun_lim_time - .@dun_cur_time;
		.@dun_h = .@dun_ent_t / 3600;
		.@dun_m = (.@dun_ent_t - (.@dun_h * 3600)) / 60;
		.@dun_s = .@dun_ent_t - ((.@dun_h * 3600) + (.@dun_m * 60));

		mesf("Due to the tower's aftereffects, you cannot enter the dungeon right now, %d hours %d minutes %d seconds left to enter the next dungeon.", .@dun_h, .@dun_m, .@dun_s);
		next();
		mes("It is dangerous here. Let me move you to Alberta.");
		close2();
		warp("alberta", 223, 36);
		end;
	} else if (.@etower_timer == 1) {
		mes("If you have the dungeon generated already, you can enter it.");
		next();
		switch (select("Enter the Dungeon", "Return to Alberta", "Cancel")) {
		case 1:
			callsub(L_Enter, 0, 0, .@md_name$, .@p_name$);
		case 2:
			mes("I will move you to Alberta.");
			close2();
			warp("alberta", 223, 36);
			end;
		case 3:
			break;
		}
		close();
	} else {
		etower_timer = 0;
		erasequest(60200);
		erasequest(60201);
		mes("^0000ffThe records and after effects related to the Endless Tower have been removed. You can generate and enter the Endless Tower again.^000000");
		close();
	}

L_Enter:
	if (has_instance("1@tower") == "") {
		mesf("The memorial dungeon %s does not exist.", getarg(2));
		mes("The party leader did not generate the dungeon yet.");
		close();
	} else {
		mapannounce("e_tower", sprintf(_$("%s of the party, %s, is entering the dungeon, Endless Tower."), strcharinfo(PC_NAME), getarg(3)), bc_map, C_SPRINGGREEN, FW_NORMAL, 12);
		if (getarg(1)) {
			etower_timer = gettimetick(2);
			setquest(60200);
			setquest(60201);
		}
		warp("1@tower", 52, 354);
		if (getarg(0) == 0)
			close();
		else
			end;
	}
}

e_tower,30,30,2	script	Huge Vortex	CLEAR_NPC,2,2,{
	end;
OnTouch:
	mapannounce("e_tower", sprintf(_$("[ %s ], seems to be engulfed by a huge vortex"), strcharinfo(PC_NAME)), bc_map, C_SPRINGGREEN, FW_NORMAL, 12);
	warp("alberta", 223, 36);
	end;
}

// Original name: "#102Administrator Mode104"
e_tower,1,1,2	script	#102Administrator Mode	CLEAR_NPC,{
	callfunc("F_GM_NPC");
	mes("Please enter the password.");
	.@i = callfunc("F_GM_NPC", "dmc2008", 1);
	next();
	if (.@i == 1) {
		switch (select("Generate Purification Stone", "Remove Purification Stone", "Cancel")) {
		case 1:
			mes("Create the Purification Stone that stays for 30 minutes.");
			donpcevent("Purification Stone#et1::OnEnable");
			break;
		case 2:
			mes("Destroy the Purification Stone immediately");
			donpcevent("Purification Stone#et1::OnDisable");
			break;
		case 3:
			mes("You have canceled it.");
			break;
		}
		close();
	} else {
		mes("Enter the password exactly.");
		close();
	}
}

e_tower,69,117,4	script	Purification Stone#et1	2_MONEMUS,{
	etower_timer = 0;
	mes("^0000ffThe records and aftereffects related to the Endless Tower have been removed. You can generate and enter the Endless Tower again.^000000");
	close();

OnInit:
	disablenpc("Purification Stone#et1");
	end;

OnEnable:
	initnpctimer();
	end;

OnDisable:
	stopnpctimer();
	disablenpc("Purification Stone#et1");
	end;

OnTimer1000:
	enablenpc("Purification Stone#et1");
	end;

OnTimer1740000:
	mapannounce("e_tower", _("The Purification Stone will be destroyed in one minute."), bc_map, C_SPRINGGREEN);
	end;

OnTimer1800000:
	disablenpc("Purification Stone#et1");
	end;
}

e_tower,151,185,4	script	Purification Stone#et2	CLEAR_NPC,{
	callfunc("F_GM_NPC");
	etower_timer = 0;
	mes("^0000ffThe records and aftereffects related to the Endless Tower have been removed. You can generate and enter the Endless Tower again.^000000");
	close2();
	warp("e_tower", 75, 108);
	end;
}

//== Core Functions ========================================
function	script	F_Tower_Monster	{

	.@level = getarg(0);
	.@map$ = getarg(1);
	.@label$ = getarg(2);

	switch (.@level) {
	case 1:
		areamonster(.@map$, 7, 351, 17, 387, _("Metaling"), METALING, 15, .@label$);
		areamonster(.@map$, 7, 351, 17, 387, _("Marin"), MARIN, 5, .@label$);
		areamonster(.@map$, 7, 351, 17, 387, _("Poporing"), POPORING, 5, .@label$);
		areamonster(.@map$, 7, 351, 17, 387, _("Drops"), DROPS, 5, .@label$);
		areamonster(.@map$, 7, 351, 17, 387, _("Mastering"), MASTERING, 1, .@label$);
		areamonster(.@map$, 7, 351, 17, 387, _("Poring"), PORING, 5, .@label$);
		break;
	case 2:
		areamonster(.@map$, 93, 351, 103, 387, _("Desert Wolf"), DESERT_WOLF, 20, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Vagabond Wolf"), VAGABOND_WOLF, 1, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Baby Desert Wolf"), DESERT_WOLF_B, 10, .@label$);
		break;
	case 3:
		areamonster(.@map$, 181, 351, 191, 387, _("Archer Skeleton"), ARCHER_SKELETON, 5, .@label$);
		areamonster(.@map$, 181, 351, 191, 387, _("Skel Worker"), SKEL_WORKER, 5, .@label$);
		areamonster(.@map$, 181, 351, 191, 387, _("Soldier Skeleton"), SOLDIER_SKELETON, 5, .@label$);
		areamonster(.@map$, 181, 351, 191, 387, _("Orc Skeleton"), ORC_SKELETON, 5, .@label$);
		areamonster(.@map$, 181, 351, 191, 387, _("Pirate Skeleton"), PIRATE_SKEL, 5, .@label$);
		areamonster(.@map$, 181, 351, 191, 387, _("Skeleton"), SKELETON, 5, .@label$);
		break;
	case 4:
		areamonster(.@map$, 267, 351, 277, 387, _("Argiope"), ARGIOPE, 15, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("Mantis"), MANTIS, 5, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("Argos"), ARGOS, 5, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("Vocal"), VOCAL, 1, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("Rocker"), ROCKER, 5, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("Hornet"), HORNET, 5, .@label$);
		break;
	case 5:
		areamonster(.@map$, 352, 351, 362, 387, _("Golden Thief Bug"), GOLDEN_BUG, 1, .@label$);
		areamonster(.@map$, 352, 351, 362, 387, _("Thief Bug Male"), THIEF_BUG__, 15, .@label$);
		areamonster(.@map$, 352, 351, 362, 387, _("Thief Bug Female"), THIEF_BUG_, 15, .@label$);
		areamonster(.@map$, 352, 351, 362, 387, _("Thief Bug"), THIEF_BUG, 15, .@label$);
		areamonster(.@map$, 352, 351, 362, 387, _("Thief Bug Egg"), THIEF_BUG_EGG, 5, .@label$);
		break;
	case 6:
		areamonster(.@map$, 9, 267, 19, 303, _("Dragon Egg"), DRAGON_EGG, 5, .@label$);
		areamonster(.@map$, 9, 267, 19, 303, _("Thief Bug Egg"), THIEF_BUG_EGG, 5, .@label$);
		areamonster(.@map$, 9, 267, 19, 303, _("Ant Egg"), ANT_EGG, 5, .@label$);
		areamonster(.@map$, 9, 267, 19, 303, _("Pupa"), PUPA, 5, .@label$);
		break;
	case 7:
		areamonster(.@map$, 93, 267, 103, 303, _("Explosion"), EXPLOSION, 15, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Drainliar"), DRAINLIAR, 15, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Anopheles"), ANOPHELES, 15, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Farmiliar"), FARMILIAR, 15, .@label$);
		break;
	case 8:
		areamonster(.@map$, 181, 267, 191, 303, _("Firelock Soldier"), ANTIQUE_FIRELOCK, 15, .@label$);
		areamonster(.@map$, 181, 267, 191, 303, _("Cruiser"), CRUISER, 15, .@label$);
		break;
	case 9:
		areamonster(.@map$, 267, 267, 277, 303, _("Obsidian"), OBSIDIAN, 15, .@label$);
		areamonster(.@map$, 267, 267, 277, 303, _("Golem"), GOLEM, 15, .@label$);
		areamonster(.@map$, 267, 267, 277, 303, _("Stapo"), STAPO, 10, .@label$);
		break;
	case 10:
		areamonster(.@map$, 352, 267, 362, 303, _("Mistress"), MISTRESS, 1, .@label$);
		areamonster(.@map$, 352, 267, 362, 303, _("Giant Hornet"), GIANT_HONET, 25, .@label$);
		areamonster(.@map$, 352, 267, 362, 303, _("Hornet"), HORNET, 20, .@label$);
		break;
	case 11:
		areamonster(.@map$, 9, 180, 19, 216, _("Dryad"), DRYAD, 15, .@label$);
		areamonster(.@map$, 9, 180, 19, 216, _("Parasite"), PARASITE, 15, .@label$);
		areamonster(.@map$, 9, 180, 19, 216, _("Hermit Plant"), WILD_GINSENG, 15, .@label$);
		areamonster(.@map$, 9, 180, 19, 216, _("Rafflesia"), RAFFLESIA, 5, .@label$);
		break;
	case 12:
		areamonster(.@map$, 93, 180, 103, 216, _("Demon Pungus"), DEMON_PUNGUS, 25, .@label$);
		areamonster(.@map$, 93, 180, 103, 216, _("Punk"), PUNK, 25, .@label$);
		break;
	case 13:
		areamonster(.@map$, 181, 180, 191, 216, _("Yao Yun"), HYEGUN, 15, .@label$);
		areamonster(.@map$, 181, 180, 191, 216, _("Bongunn"), BON_GUN, 15, .@label$);
		areamonster(.@map$, 181, 180, 191, 216, _("Munak"), MUNAK, 10, .@label$);
		break;
	case 14:
		areamonster(.@map$, 267, 180, 277, 216, _("High Orc"), HIGH_ORC, 15, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Orc Archer"), ORC_ARCHER, 10, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Orc Lady"), ORC_LADY, 10, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Orc Warrior"), ORK_WARRIOR, 5, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Orc Baby"), ORC_BABY, 5, .@label$);
		break;
	case 15:
		areamonster(.@map$, 352, 180, 362, 216, _("Maya"), MAYA, 1, .@label$);
		areamonster(.@map$, 352, 180, 362, 216, _("Phreeoni"), PHREEONI, 1, .@label$);
		areamonster(.@map$, 352, 180, 362, 216, _("Deniro"), DENIRO, 15, .@label$);
		areamonster(.@map$, 352, 180, 362, 216, _("Pierre"), PIERE, 15, .@label$);
		areamonster(.@map$, 352, 180, 362, 216, _("Andre"), ANDRE, 15, .@label$);
		areamonster(.@map$, 352, 180, 362, 216, _("Ant Egg"), ANT_EGG, 5, .@label$);
		break;
	case 16:
		areamonster(.@map$, 9, 96, 19, 132, _("Raydric Archer"), RAYDRIC_ARCHER, 10, .@label$);
		areamonster(.@map$, 9, 96, 19, 132, _("Orc Archer"), ORC_ARCHER, 10, .@label$);
		areamonster(.@map$, 9, 96, 19, 132, _("Gargoyle"), GARGOYLE, 10, .@label$);
		areamonster(.@map$, 9, 96, 19, 132, _("Archer Skeleton"), ARCHER_SKELETON, 10, .@label$);
		break;
	case 17:
		areamonster(.@map$, 93, 96, 103, 132, _("Merman"), MERMAN, 10, .@label$);
		areamonster(.@map$, 93, 96, 103, 132, _("Baphomet Jr."), BAPHOMET_, 10, .@label$);
		areamonster(.@map$, 93, 96, 103, 132, _("Strouf"), STROUF, 15, .@label$);
		areamonster(.@map$, 93, 96, 103, 132, _("Hill Wind"), HILL_WIND, 5, .@label$);
		break;
	case 18:
		areamonster(.@map$, 181, 96, 191, 132, _("Cramp"), CRAMP, 25, .@label$);
		areamonster(.@map$, 181, 96, 191, 132, _("Tarou"), TAROU, 15, .@label$);
		break;
	case 19:
		areamonster(.@map$, 267, 96, 277, 132, _("Deviace"), DEVIACE, 10, .@label$);
		areamonster(.@map$, 267, 96, 277, 132, _("Megalodon"), MEGALODON, 10, .@label$);
		areamonster(.@map$, 267, 96, 277, 132, _("Swordfish"), SWORD_FISH, 10, .@label$);
		areamonster(.@map$, 267, 96, 277, 132, _("Phen"), PHEN, 10, .@label$);
		break;
	case 20:
		areamonster(.@map$, 352, 96, 362, 132, _("Drake"), DRAKE, 1, .@label$);
		areamonster(.@map$, 352, 96, 362, 132, _("Pirate Skeleton"), PIRATE_SKEL, 50, .@label$);
		break;
	case 21:
		areamonster(.@map$, 9, 9, 19, 45, _("Plasma"), PLASMA_Y, 10, .@label$);
		areamonster(.@map$, 9, 9, 19, 45, _("Plasma"), PLASMA_P, 10, .@label$);
		areamonster(.@map$, 9, 9, 19, 45, _("Plasma"), PLASMA_G, 5, .@label$);
		areamonster(.@map$, 9, 9, 19, 45, _("Plasma"), PLASMA_B, 5, .@label$);
		areamonster(.@map$, 9, 9, 19, 45, _("Plasma"), PLASMA_R, 5, .@label$);
		break;
	case 22:
		areamonster(.@map$, 93, 9, 103, 45, _("Muscipular"), MUSCIPULAR, 15, .@label$);
		areamonster(.@map$, 93, 9, 103, 45, _("Drosera"), DROSERA, 15, .@label$);
		areamonster(.@map$, 93, 9, 103, 45, _("Flora"), FLORA, 15, .@label$);
		areamonster(.@map$, 93, 9, 103, 45, _("Hydra"), HYDRA, 15, .@label$);
		areamonster(.@map$, 93, 9, 103, 45, _("Mandragora"), MANDRAGORA, 10, .@label$);
		areamonster(.@map$, 93, 9, 103, 45, _("Rafflesia"), RAFFLESIA, 10, .@label$);
		break;
	case 23:
		areamonster(.@map$, 181, 9, 191, 45, _("Penomena"), PENOMENA, 15, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Obeaune"), OBEAUNE, 10, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Marse"), MARSE, 10, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Swordfish"), SWORD_FISH, 10, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Hydra"), HYDRA, 5, .@label$);
		break;
	case 24:
		areamonster(.@map$, 267, 9, 277, 45, _("Joker"), JOKER, 15, .@label$);
		areamonster(.@map$, 267, 9, 277, 45, _("Carat"), CARAT, 15, .@label$);
		areamonster(.@map$, 267, 9, 277, 45, _("Jakk"), JAKK, 10, .@label$);
		break;
	case 25:
		areamonster(.@map$, 352, 9, 362, 45, _("Cat o' Nine Tails"), CAT_O_NINE_TAIL, 15, .@label$);
		areamonster(.@map$, 352, 9, 362, 45, _("Moonlight"), MOONLIGHT, 1, .@label$);
		areamonster(.@map$, 352, 9, 362, 45, _("Nine Tail"), NINE_TAIL, 15, .@label$);
		break;
	case 26:
		areamonster(.@map$, 9, 351, 19, 387, _("Gibbet"), GIBBET, 10, .@label$);
		areamonster(.@map$, 9, 351, 19, 387, _("Enchanted Peach Tree"), LIVE_PEACH_TREE, 10, .@label$);
		areamonster(.@map$, 9, 351, 19, 387, _("Wooden Golem"), WOODEN_GOLEM, 10, .@label$);
		areamonster(.@map$, 9, 351, 19, 387, _("Stone Shooter"), STONE_SHOOTER, 10, .@label$);
		areamonster(.@map$, 9, 351, 19, 387, _("Elder Willow"), ELDER_WILOW, 5, .@label$);
		break;
	case 27:
		areamonster(.@map$, 93, 351, 103, 387, _("Goblin Archer"), GOBLIN_ARCHER, 10, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Goblin"), GOBLIN_1, 10, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Goblin"), GOBLIN_2, 5, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Goblin"), GOBLIN_3, 5, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Gobin"), GOBLIN_4, 5, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Goblin"), GOBLIN_5, 5, .@label$);
		break;
	case 28:
		areamonster(.@map$, 181, 351, 191, 387, _("Arclouse"), ARCLOUSE, 30, .@label$);
		areamonster(.@map$, 181, 351, 191, 387, _("Neraid"), NERAID, 15, .@label$);
		areamonster(.@map$, 181, 351, 191, 387, _("Pest"), PEST, 15, .@label$);
		areamonster(.@map$, 181, 351, 191, 387, _("Kukre"), KUKRE, 10, .@label$);
		break;
	case 29:
		areamonster(.@map$, 267, 351, 277, 387, _("Dark Frame"), DARK_FRAME, 10, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("The Paper"), THE_PAPER, 10, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("Hylozoist"), HYLOZOIST, 10, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("Quve"), QUVE, 5, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("Lude"), LUDE, 5, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("Whisper"), WHISPER, 10, .@label$);
		break;
	case 30:
		areamonster(.@map$, 352, 351, 362, 387, _("White Lady"), BACSOJIN_, 1, .@label$);
		areamonster(.@map$, 352, 351, 362, 387, _("Evil Nymph"), WICKED_NYMPH, 30, .@label$);
		break;
	case 31:
		areamonster(.@map$, 9, 267, 19, 303, _("Gig"), GIG, 20, .@label$);
		areamonster(.@map$, 9, 267, 19, 303, _("Iron Fist"), IRON_FIST, 15, .@label$);
		areamonster(.@map$, 9, 267, 19, 303, _("Argiope"), ARGIOPE, 10, .@label$);
		areamonster(.@map$, 9, 267, 19, 303, _("Scorpion"), SCORPION, 5, .@label$);
		break;
	case 32:
		areamonster(.@map$, 93, 267, 103, 303, _("Goblin Leader"), GOBLIN_LEADER, 1, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Goblin Archer"), GOBLIN_ARCHER, 10, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Goblin"), GOBLIN_1, 10, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Goblin"), GOBLIN_2, 5, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Goblin"), GOBLIN_3, 5, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Goblin"), GOBLIN_4, 5, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Goblin"), GOBLIN_5, 5, .@label$);
		break;
	case 33:
		areamonster(.@map$, 181, 267, 191, 303, _("Kobold Leader"), KOBOLD_LEADER, 1, .@label$);
		areamonster(.@map$, 181, 267, 191, 303, _("Kobold"), KOBOLD_1, 15, .@label$);
		areamonster(.@map$, 181, 267, 191, 303, _("Kobold_Archer"), KOBOLD_ARCHER, 15, .@label$);
		areamonster(.@map$, 181, 267, 191, 303, _("Kobold"), KOBOLD_2, 10, .@label$);
		areamonster(.@map$, 181, 267, 191, 303, _("Kobold"), KOBOLD_3, 5, .@label$);
		break;
	case 34:
		areamonster(.@map$, 267, 267, 277, 303, _("Flame Skull"), FLAME_SKULL, 20, .@label$);
		areamonster(.@map$, 267, 267, 277, 303, _("Whisper"), WHISPER, 10, .@label$);
		areamonster(.@map$, 267, 267, 277, 303, _("Giant Whisper"), WHISPER_BOSS, 10, .@label$);
		break;
	case 35:
		areamonster(.@map$, 352, 267, 362, 303, _("Turtle General"), TURTLE_GENERAL, 1, .@label$);
		areamonster(.@map$, 352, 267, 362, 303, _("Freezer"), FREEZER, 10, .@label$);
		areamonster(.@map$, 352, 267, 362, 303, _("Solider"), SOLIDER, 10, .@label$);
		areamonster(.@map$, 352, 267, 362, 303, _("Heater"), HEATER, 10, .@label$);
		areamonster(.@map$, 352, 267, 362, 303, _("Permeter"), PERMETER, 10, .@label$);
		break;
	case 36:
		areamonster(.@map$, 9, 180, 19, 216, _("Anolian"), ANOLIAN, 30, .@label$);
		areamonster(.@map$, 9, 180, 19, 216, _("Grove"), GREEN_IGUANA, 10, .@label$);
		areamonster(.@map$, 9, 180, 19, 216, _("Alligator"), ALLIGATOR, 10, .@label$);
		break;
	case 37:
		areamonster(.@map$, 93, 180, 103, 216, _("Clock Tower Manager"), C_TOWER_MANAGER, 10, .@label$);
		areamonster(.@map$, 93, 180, 103, 216, _("Clock"), CLOCK, 10, .@label$);
		areamonster(.@map$, 93, 180, 103, 216, _("Alarm"), ALARM, 30, .@label$);
		break;
	case 38:
		areamonster(.@map$, 181, 180, 191, 216, _("Death Word"), DEATHWORD, 25, .@label$);
		areamonster(.@map$, 181, 180, 191, 216, _("Rideword"), RIDEWORD, 25, .@label$);
		break;
	case 39:
		areamonster(.@map$, 267, 180, 277, 216, _("Evil Nymph"), WICKED_NYMPH, 10, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Mao Gui"), CIVIL_SERVANT, 10, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Taoist Hermit"), EVIL_CLOUD_HERMIT, 10, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Zhu Po Long"), DANCING_DRAGON, 10, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Jin Guai"), LI_ME_MANG_RYANG, 5, .@label$);
		break;
	case 40:
		areamonster(.@map$, 352, 180, 362, 216, _("Samurai Specter"), INCANTATION_SAMURAI, 1, .@label$);
		areamonster(.@map$, 352, 180, 362, 216, _("Shinobi"), SHINOBI, 10, .@label$);
		areamonster(.@map$, 352, 180, 362, 216, _("Tengu"), TENGU, 10, .@label$);
		areamonster(.@map$, 352, 180, 362, 216, _("Firelock Soldier"), ANTIQUE_FIRELOCK, 5, .@label$);
		areamonster(.@map$, 352, 180, 362, 216, _("Miyabi Doll"), MIYABI_NINGYO, 10, .@label$);
		areamonster(.@map$, 352, 180, 362, 216, _("Karakasa"), KARAKASA, 5, .@label$);
		break;
	case 41:
		areamonster(.@map$, 9, 96, 19, 132, _("Kraben"), KRABEN, 50, .@label$);
		break;
	case 42:
		areamonster(.@map$, 93, 96, 103, 132, _("Sleeper"), SLEEPER, 20, .@label$);
		areamonster(.@map$, 93, 96, 103, 132, _("Sting"), STING, 10, .@label$);
		areamonster(.@map$, 93, 96, 103, 132, _("Mi Gao"), INCREASE_SOIL, 10, .@label$);
		areamonster(.@map$, 93, 96, 103, 132, _("Sandman"), SAND_MAN, 5, .@label$);
		areamonster(.@map$, 93, 96, 103, 132, _("Hode"), HODE, 5, .@label$);
		break;
	case 43:
		areamonster(.@map$, 181, 96, 191, 132, _("Medusa"), MEDUSA, 10, .@label$);
		areamonster(.@map$, 181, 96, 191, 132, _("Sidewinder"), SIDE_WINDER, 40, .@label$);
		areamonster(.@map$, 181, 96, 191, 132, _("Anacondaq"), ANACONDAQ, 5, .@label$);
		areamonster(.@map$, 181, 96, 191, 132, _("Boa"), SNAKE, 5, .@label$);
		break;
	case 44:
		areamonster(.@map$, 267, 96, 277, 132, _("Hatii Baby"), GARM_BABY, 20, .@label$);
		areamonster(.@map$, 267, 96, 277, 132, _("Baphomet Jr."), BAPHOMET_, 20, .@label$);
		areamonster(.@map$, 267, 96, 277, 132, _("Orc Baby"), ORC_BABY, 1, .@label$);
		areamonster(.@map$, 267, 96, 277, 132, _("Baby Desert Wolf"), DESERT_WOLF_B, 10, .@label$);
		areamonster(.@map$, 267, 96, 277, 132, _("Savage Babe"), SAVAGE_BABE, 10, .@label$);
		break;
	case 45:
		areamonster(.@map$, 352, 96, 362, 132, _("Osiris"), OSIRIS, 1, .@label$);
		areamonster(.@map$, 352, 96, 362, 132, _("Ancient Mummy"), ANCIENT_MUMMY, 15, .@label$);
		areamonster(.@map$, 352, 96, 362, 132, _("Verit"), VERIT, 15, .@label$);
		areamonster(.@map$, 352, 96, 362, 132, _("Mummy"), MUMMY, 20, .@label$);
		break;
	case 46:
		areamonster(.@map$, 9, 9, 19, 45, _("Seeker"), SEEKER, 20, .@label$);
		areamonster(.@map$, 9, 9, 19, 45, _("Beholder"), BEHOLDER, 20, .@label$);
		break;
	case 47:
		areamonster(.@map$, 93, 9, 103, 45, _("Deleter"), DELETER, 20, .@label$);
		areamonster(.@map$, 93, 9, 103, 45, _("Deleter"), DELETER_, 10, .@label$);
		areamonster(.@map$, 93, 9, 103, 45, _("Petite"), PETIT_, 10, .@label$);
		areamonster(.@map$, 93, 9, 103, 45, _("Petite"), PETIT, 10, .@label$);
		break;
	case 48:
		areamonster(.@map$, 181, 9, 191, 45, _("Ancient Worm"), ANCIENT_WORM, 10, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Ancient Mummy"), ANCIENT_MUMMY, 10, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Ancient Mimic"), ANCIENT_MIMIC, 10, .@label$);
		break;
	case 49:
		areamonster(.@map$, 267, 9, 277, 45, _("Grizzly"), GRIZZLY, 20, .@label$);
		areamonster(.@map$, 267, 9, 277, 45, _("Leib Olmai"), LEIB_OLMAI, 7, .@label$);
		areamonster(.@map$, 267, 9, 277, 45, _("Zipper Bear"), ZIPPER_BEAR, 5, .@label$);
		areamonster(.@map$, 267, 9, 277, 45, _("Sasquatch"), SASQUATCH, 5, .@label$);
		areamonster(.@map$, 267, 9, 277, 45, _("Bigfoot"), BIGFOOT, 5, .@label$);
		break;
	case 50:
		areamonster(.@map$, 352, 9, 362, 45, _("Pharaoh"), PHARAOH, 1, .@label$);
		areamonster(.@map$, 352, 9, 362, 45, _("Amon Ra"), AMON_RA, 1, .@label$);
		areamonster(.@map$, 352, 9, 362, 45, _("Anubis"), ANUBIS, 10, .@label$);
		areamonster(.@map$, 352, 9, 362, 45, _("Marduk"), MARDUK, 10, .@label$);
		areamonster(.@map$, 352, 9, 362, 45, _("Matyr"), MATYR, 10, .@label$);
		break;
	case 51:
		areamonster(.@map$, 9, 351, 19, 387, _("Mini Demon"), MINI_DEMON, 20, .@label$);
		areamonster(.@map$, 9, 351, 19, 387, _("Diabolic"), DIABOLIC, 20, .@label$);
		areamonster(.@map$, 9, 351, 19, 387, _("Deviruchi"), DEVIRUCHI, 10, .@label$);
		break;
	case 52:
		areamonster(.@map$, 93, 351, 103, 387, _("Harpy"), HARPY, 20, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Grand Peco"), GRAND_PECO, 10, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Bloody Butterfly"), BLOOD_BUTTERFLY, 10, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Gargoyle"), GARGOYLE, 10, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Hill Wind"), HILL_WIND_1, 5, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Hill Wind"), HILL_WIND, 5, .@label$);
		break;
	case 53:
		areamonster(.@map$, 181, 351, 191, 387, _("Assaulter"), ASSULTER, 25, .@label$);
		areamonster(.@map$, 181, 351, 191, 387, _("Shinobi"), SHINOBI, 30, .@label$);
		break;
	case 54:
		areamonster(.@map$, 267, 351, 277, 387, _("Chepet"), CHEPET, 10, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("Mariontte"), MARIONETTE, 10, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("Miyabi Doll"), MIYABI_NINGYO, 10, .@label$);
		break;
	case 55:
		areamonster(.@map$, 352, 351, 362, 387, _("Medusa"), MEDUSA, 25, .@label$);
		areamonster(.@map$, 352, 351, 362, 387, _("Evil Snake Lord"), DARK_SNAKE_LORD, 1, .@label$);
		areamonster(.@map$, 352, 351, 362, 387, _("Isis"), ISIS, 15, .@label$);
		areamonster(.@map$, 352, 351, 362, 387, _("Sidewinder"), SIDE_WINDER, 15, .@label$);
		break;
	case 56:
		areamonster(.@map$, 9, 267, 19, 303, _("Freezer"), FREEZER, 10, .@label$);
		areamonster(.@map$, 9, 267, 19, 303, _("Hatii Baby"), GARM_BABY, 10, .@label$);
		areamonster(.@map$, 9, 267, 19, 303, _("Ice Titan"), ICE_TITAN, 15, .@label$);
		areamonster(.@map$, 9, 267, 19, 303, _("Snowier"), SNOWIER, 10, .@label$);
		areamonster(.@map$, 9, 267, 19, 303, _("Gazeti"), GAZETI, 10, .@label$);
		break;
	case 57:
		areamonster(.@map$, 93, 267, 103, 303, _("Arc Angeling"), ARCHANGELING, 1, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Deviling"), DEVILING, 1, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Angeling"), ANGELING, 1, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Ghostring"), GHOSTRING, 1, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Mastering"), MASTERING, 1, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Metaling"), METALING, 25, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Marin"), MARIN, 5, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Poporing"), POPORING, 5, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Drops"), DROPS, 5, .@label$);
		break;
	case 58:
		areamonster(.@map$, 181, 267, 191, 303, _("Phendark"), PHENDARK, 20, .@label$);
		areamonster(.@map$, 181, 267, 191, 303, _("Rybio"), RYBIO, 10, .@label$);
		areamonster(.@map$, 181, 267, 191, 303, _("Zombie Prisoner"), ZOMBIE_PRISONER, 10, .@label$);
		areamonster(.@map$, 181, 267, 191, 303, _("Skeleton Prisoner"), SKEL_PRISONER, 5, .@label$);
		areamonster(.@map$, 181, 267, 191, 303, _("Injustice"), INJUSTICE, 5, .@label$);
		break;
	case 59:
		areamonster(.@map$, 267, 267, 277, 303, _("Ancient Mimic"), ANCIENT_MIMIC, 30, .@label$);
		areamonster(.@map$, 267, 267, 277, 303, _("Mimic"), MIMIC, 20, .@label$);
		areamonster(.@map$, 267, 267, 277, 303, _("Mystcase"), MYSTCASE, 10, .@label$);
		break;
	case 60:
		areamonster(.@map$, 352, 267, 362, 303, _("Egnigem Cenia"), B_YGNIZEM, 1, .@label$);
		areamonster(.@map$, 352, 267, 362, 303, _("Doppelganger"), DOPPELGANGER, 1, .@label$);
		areamonster(.@map$, 352, 267, 362, 303, _("Armeyer Dinze"), ARMAIA, 10, .@label$);
		areamonster(.@map$, 352, 267, 362, 303, _("Wickebine Tres"), WHIKEBAIN, 10, .@label$);
		areamonster(.@map$, 352, 267, 362, 303, _("Laurell Winder"), RAWREL, 10, .@label$);
		areamonster(.@map$, 352, 267, 362, 303, _("Kavach Icarus"), KAVAC, 10, .@label$);
		areamonster(.@map$, 352, 267, 362, 303, _("Errende Ebecee"), EREND, 10, .@label$);
		areamonster(.@map$, 352, 267, 362, 303, _("Egnigem Cenia"), YGNIZEM, 10, .@label$);
		break;
	case 61:
		areamonster(.@map$, 9, 180, 19, 216, _("Agav"), AGAV, 10, .@label$);
		areamonster(.@map$, 9, 180, 19, 216, _("Echio"), ECHIO, 10, .@label$);
		areamonster(.@map$, 9, 180, 19, 216, _("Isilla"), ISILLA, 5, .@label$);
		areamonster(.@map$, 9, 180, 19, 216, _("Mobster"), MOBSTER, 10, .@label$);
		areamonster(.@map$, 9, 180, 19, 216, _("Pasana"), PASANA, 10, .@label$);
		areamonster(.@map$, 9, 180, 19, 216, _("Vanberk"), VANBERK, 5, .@label$);
		break;
	case 62:
		areamonster(.@map$, 93, 180, 103, 216, _("Wanderer"), WANDER_MAN, 35, .@label$);
		break;
	case 63:
		areamonster(.@map$, 181, 180, 191, 216, _("Ragged Zombie"), RAGGED_ZOMBIE, 20, .@label$);
		areamonster(.@map$, 181, 180, 191, 216, _("Zombie Master"), ZOMBIE_MASTER, 10, .@label$);
		areamonster(.@map$, 181, 180, 191, 216, _("Zombie Prisoner"), ZOMBIE_PRISONER, 5, .@label$);
		areamonster(.@map$, 181, 180, 191, 216, _("Orc Zombie"), ORC_ZOMBIE, 5, .@label$);
		areamonster(.@map$, 181, 180, 191, 216, _("Zombie"), ZOMBIE, 5, .@label$);
		break;
	case 64:
		areamonster(.@map$, 267, 180, 277, 216, _("Ungoliant"), UNGOLIANT, 30, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Ancient Worm"), ANCIENT_WORM, 2, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Caterpillar"), CATERPILLAR, 2, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Creamy Fear"), CREMY_FEAR, 2, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Killer Mantis"), KILLER_MANTIS, 2, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Giant Hornet"), GIANT_HONET, 2, .@label$);
		break;
	case 65:
		areamonster(.@map$, 352, 180, 362, 216, _("Atros"), ATROCE, 1, .@label$);
		areamonster(.@map$, 352, 180, 362, 216, _("Galion"), GALION, 20, .@label$);
		break;
	case 66:
		areamonster(.@map$, 9, 96, 19, 132, _("Incubus"), INCUBUS, 20, .@label$);
		areamonster(.@map$, 9, 96, 19, 132, _("Aliot"), ALIOT, 20, .@label$);
		areamonster(.@map$, 9, 96, 19, 132, _("Injustice"), INJUSTICE, 10, .@label$);
		break;
	case 67:
		areamonster(.@map$, 93, 96, 103, 132, _("Acidus"), ACIDUS_, 10, .@label$);
		areamonster(.@map$, 93, 96, 103, 132, _("Acidus"), ACIDUS, 10, .@label$);
		areamonster(.@map$, 93, 96, 103, 132, _("Deleter"), DELETER, 5, .@label$);
		areamonster(.@map$, 93, 96, 103, 132, _("Mutant Dragonoid"), MUTANT_DRAGON, 10, .@label$);
		areamonster(.@map$, 93, 96, 103, 132, _("Petite"), PETIT_, 5, .@label$);
		break;
	case 68:
		areamonster(.@map$, 181, 96, 191, 132, _("Lava Golem"), LAVA_GOLEM, 10, .@label$);
		areamonster(.@map$, 181, 96, 191, 132, _("Stalactic Golem"), STALACTIC_GOLEM, 10, .@label$);
		areamonster(.@map$, 181, 96, 191, 132, _("Ice Titan"), ICE_TITAN, 10, .@label$);
		areamonster(.@map$, 181, 96, 191, 132, _("Wooden Golem"), WOODEN_GOLEM, 5, .@label$);
		areamonster(.@map$, 181, 96, 191, 132, _("Golem"), GOLEM, 5, .@label$);
		break;
	case 69:
		areamonster(.@map$, 267, 96, 277, 132, _("Dame of Sentinel"), OBSERVATION, 20, .@label$);
		areamonster(.@map$, 267, 96, 277, 132, _("Mistress of Shelter"), SHELTER, 10, .@label$);
		areamonster(.@map$, 267, 96, 277, 132, _("Baroness of Retribution"), RETRIBUTION, 10, .@label$);
		areamonster(.@map$, 267, 96, 277, 132, _("Lady Solace"), SOLACE, 10, .@label$);
		areamonster(.@map$, 267, 96, 277, 132, _("False Angel"), FAKE_ANGEL, 10, .@label$);
		break;
	case 70:
		areamonster(.@map$, 352, 96, 362, 132, _("Orc Hero"), ORK_HERO, 1, .@label$);
		areamonster(.@map$, 352, 96, 362, 132, _("Orc Lord"), ORC_LORD, 1, .@label$);
		areamonster(.@map$, 352, 96, 362, 132, _("Orc Baby"), ORC_BABY, 20, .@label$);
		break;
	case 71:
		areamonster(.@map$, 9, 9, 19, 45, _("Succubus"), SUCCUBUS, 20, .@label$);
		areamonster(.@map$, 9, 9, 19, 45, _("Nightmare Terror"), NIGHTMARE_TERROR, 20, .@label$);
		areamonster(.@map$, 9, 9, 19, 45, _("Incubus"), INCUBUS, 20, .@label$);
		areamonster(.@map$, 9, 9, 19, 45, _("Nightmare"), NIGHTMARE, 5, .@label$);
		break;
	case 72:
		areamonster(.@map$, 93, 9, 103, 45, _("Margaretha Sorin"), MAGALETA, 10, .@label$);
		areamonster(.@map$, 93, 9, 103, 45, _("Permeter"), PERMETER, 10, .@label$);
		areamonster(.@map$, 93, 9, 103, 45, _("Errende Ebecee"), EREND, 10, .@label$);
		areamonster(.@map$, 93, 9, 103, 45, _("Enchanted Peach Tree"), LIVE_PEACH_TREE, 10, .@label$);
		break;
	case 73:
		areamonster(.@map$, 181, 9, 191, 45, _("Succubus"), SUCCUBUS, 10, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Loli Ruri"), LOLI_RURI, 20, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Aliza"), ALIZA, 10, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Zealotus"), ZHERLTHSH, 5, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Alice"), ALICE, 5, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Green Maiden"), CHUNG_E, 10, .@label$);
		break;
	case 74:
		areamonster(.@map$, 267, 9, 277, 45, _("Dimik"), DIMIK_2, 6, .@label$);
		areamonster(.@map$, 267, 9, 277, 45, _("Dimik"), DIMIK_4, 6, .@label$);
		areamonster(.@map$, 267, 9, 277, 45, _("Dimik"), DIMIK_3, 6, .@label$);
		areamonster(.@map$, 267, 9, 277, 45, _("Venatu"), VENATU_2, 6, .@label$);
		areamonster(.@map$, 267, 9, 277, 45, _("Dimik"), DIMIK_1, 6, .@label$);
		areamonster(.@map$, 267, 9, 277, 45, _("Archdam"), ARCHDAM, 6, .@label$);
		areamonster(.@map$, 267, 9, 277, 45, _("Venatu"), VENATU_3, 6, .@label$);
		areamonster(.@map$, 267, 9, 277, 45, _("Venatu"), VENATU_4, 6, .@label$);
		areamonster(.@map$, 267, 9, 277, 45, _("Venatu"), VENATU_1, 6, .@label$);
		break;
	case 75:
		areamonster(.@map$, 352, 9, 362, 45, _("Baphomet"), BAPHOMET, 1, .@label$);
		areamonster(.@map$, 352, 9, 362, 45, _("Dark Lord"), DARK_LORD, 1, .@label$);
		areamonster(.@map$, 352, 9, 362, 45, _("Baphomet Jr."), BAPHOMET_, 20, .@label$);
		areamonster(.@map$, 352, 9, 362, 45, _("Dark Illusion"), DARK_ILLUSION, 10, .@label$);
		break;
	case 76:
		areamonster(.@map$, 9, 351, 19, 387, _("Abysmal Knight"), KNIGHT_OF_ABYSS, 30, .@label$);
		areamonster(.@map$, 9, 351, 19, 387, _("Nightmare Terror"), NIGHTMARE_TERROR, 20, .@label$);
		areamonster(.@map$, 9, 351, 19, 387, _("Nightmare"), NIGHTMARE, 10, .@label$);
		break;
	case 77:
		areamonster(.@map$, 93, 351, 103, 387, _("Banshee"), BANSHEE, 30, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Wraith Dead"), WRAITH_DEAD, 10, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Evil Druid"), EVIL_DRUID, 10, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Wraith"), WRAITH, 10, .@label$);
		areamonster(.@map$, 93, 351, 103, 387, _("Wind Ghost"), WIND_GHOST, 10, .@label$);
		break;
	case 78:
		areamonster(.@map$, 181, 351, 191, 387, _("Sword Master"), SWORD_GUARDIAN, 5, .@label$);
		areamonster(.@map$, 181, 351, 191, 387, _("Bloody Knight"), BLOODY_KNIGHT, 10, .@label$);
		areamonster(.@map$, 181, 351, 191, 387, _("Abysmal Knight"), KNIGHT_OF_ABYSS, 5, .@label$);
		areamonster(.@map$, 181, 351, 191, 387, _("Dullahan"), DULLAHAN, 10, .@label$);
		areamonster(.@map$, 181, 351, 191, 387, _("Raydric"), RAYDRIC, 20, .@label$);
		break;
	case 79:
		areamonster(.@map$, 267, 351, 277, 387, _("Hydro"), HYDRO, 10, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("Ferus"), FERUS, 10, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("Ferus"), FERUS_, 10, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("Deleter"), DELETER_, 5, .@label$);
		areamonster(.@map$, 267, 351, 277, 387, _("Petite"), PETIT, 5, .@label$);
		break;
	case 80:
		areamonster(.@map$, 352, 351, 362, 387, _("Falling Bishop"), FALLINGBISHOP, 1, .@label$);
		areamonster(.@map$, 352, 351, 362, 387, _("Necromancer"), NECROMANCER, 15, .@label$);
		break;
	case 81:
		areamonster(.@map$, 9, 267, 19, 303, _("Mysteltainn"), MYSTELTAINN, 20, .@label$);
		areamonster(.@map$, 9, 267, 19, 303, _("Ogretooth"), TIRFING, 20, .@label$);
		areamonster(.@map$, 9, 267, 19, 303, _("Executioner"), EXECUTIONER, 20, .@label$);
		break;
	case 82:
		areamonster(.@map$, 93, 267, 103, 303, _("Bloody Knight"), BLOODY_KNIGHT, 10, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Agav"), AGAV, 10, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Bloody Murderer"), BLOODY_MURDERER, 10, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Skogul"), SKOGUL, 10, .@label$);
		areamonster(.@map$, 93, 267, 103, 303, _("Injustice"), INJUSTICE, 10, .@label$);
		break;
	case 83:
		areamonster(.@map$, 181, 267, 191, 303, _("Skeggiold"), SKEGGIOLD, 10, .@label$);
		areamonster(.@map$, 181, 267, 191, 303, _("Dark Illusion"), DARK_ILLUSION, 10, .@label$);
		areamonster(.@map$, 181, 267, 191, 303, _("Gryphon"), GRYPHON, 10, .@label$);
		areamonster(.@map$, 181, 267, 191, 303, _("Chimera"), CHIMERA, 10, .@label$);
		break;
	case 84:
		areamonster(.@map$, 267, 267, 277, 303, _("Succubus"), SUCCUBUS, 10, .@label$);
		areamonster(.@map$, 267, 267, 277, 303, _("Dark Illusion"), DARK_ILLUSION, 20, .@label$);
		areamonster(.@map$, 267, 267, 277, 303, _("Owl Duke"), OWL_DUKE, 10, .@label$);
		areamonster(.@map$, 267, 267, 277, 303, _("Owl Baron"), OWL_BARON, 10, .@label$);
		areamonster(.@map$, 267, 267, 277, 303, _("Incubus"), INCUBUS, 10, .@label$);
		break;
	case 85:
		areamonster(.@map$, 352, 267, 362, 303, _("Ifrit"), IFRIT, 1, .@label$);
		break;
	case 86:
		areamonster(.@map$, 9, 180, 19, 216, _("Hydro"), HYDRO, 10, .@label$);
		areamonster(.@map$, 9, 180, 19, 216, _("Gryphon"), GRYPHON, 10, .@label$);
		areamonster(.@map$, 9, 180, 19, 216, _("Chimera"), CHIMERA, 10, .@label$);
		areamonster(.@map$, 9, 180, 19, 216, _("Majoruros"), MAJORUROS, 10, .@label$);
		break;
	case 87:
		areamonster(.@map$, 93, 180, 103, 216, _("Salamander"), SALAMANDER, 15, .@label$);
		areamonster(.@map$, 93, 180, 103, 216, _("Kasa"), KASA, 20, .@label$);
		areamonster(.@map$, 93, 180, 103, 216, _("Lava Golem"), LAVA_GOLEM, 15, .@label$);
		areamonster(.@map$, 93, 180, 103, 216, _("Gajomart"), GAJOMART, 10, .@label$);
		break;
	case 88:
		areamonster(.@map$, 181, 180, 191, 216, _("Necromancer"), NECROMANCER, 15, .@label$);
		areamonster(.@map$, 181, 180, 191, 216, _("Anubis"), ANUBIS, 15, .@label$);
		areamonster(.@map$, 181, 180, 191, 216, _("Wraith Dead"), WRAITH_DEAD, 10, .@label$);
		areamonster(.@map$, 181, 180, 191, 216, _("Ancient Mummy"), ANCIENT_MUMMY, 10, .@label$);
		areamonster(.@map$, 181, 180, 191, 216, _("Khalitzburg"), KHALITZBURG, 10, .@label$);
		break;
	case 89:
		areamonster(.@map$, 267, 180, 277, 216, _("Odium of Thanatos"), THA_ODIUM, 6, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Despero of Thanatos"), THA_DESPERO, 6, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Maero of Thanatos"), THA_MAERO, 6, .@label$);
		areamonster(.@map$, 267, 180, 277, 216, _("Dolor of Thanatos"), THA_DOLOR, 6, .@label$);
		break;
	case 90:
		areamonster(.@map$, 352, 180, 362, 216, _("Valkyrie Randgris"), RANDGRIS, 1, .@label$);
		areamonster(.@map$, 352, 180, 362, 216, _("Baroness of Retribution"), RETRIBUTION, 10, .@label$);
		areamonster(.@map$, 352, 180, 362, 216, _("Lady Solace"), SOLACE, 10, .@label$);
		areamonster(.@map$, 352, 180, 362, 216, _("False Angel"), FAKE_ANGEL, 10, .@label$);
		break;
	case 91:
		areamonster(.@map$, 9, 96, 19, 132, _("Cecil Damon"), SHECIL, 10, .@label$);
		areamonster(.@map$, 9, 96, 19, 132, _("Bow Master"), BOW_GUARDIAN, 10, .@label$);
		areamonster(.@map$, 9, 96, 19, 132, _("Kavac"), KAVAC, 30, .@label$);
		break;
	case 92:
		areamonster(.@map$, 93, 96, 103, 132, _("Kathryne Keyron"), KATRINN, 15, .@label$);
		areamonster(.@map$, 93, 96, 103, 132, _("Elder"), ELDER, 10, .@label$);
		areamonster(.@map$, 93, 96, 103, 132, _("Laurell Weinder"), RAWREL, 10, .@label$);
		areamonster(.@map$, 93, 96, 103, 132, _("Wind Ghost"), WIND_GHOST, 10, .@label$);
		areamonster(.@map$, 93, 96, 103, 132, _("Marduk"), MARDUK, 10, .@label$);
		break;
	case 93:
		areamonster(.@map$, 181, 96, 191, 132, _("Seyren Windsor"), SEYREN, 15, .@label$);
		areamonster(.@map$, 181, 96, 191, 132, _("Bloody Knight"), BLOODY_KNIGHT, 10, .@label$);
		areamonster(.@map$, 181, 96, 191, 132, _("Abysmal Knight"), KNIGHT_OF_ABYSS, 10, .@label$);
		areamonster(.@map$, 181, 96, 191, 132, _("Wanderer"), WANDER_MAN, 10, .@label$);
		break;
	case 94:
		areamonster(.@map$, 267, 96, 277, 132, _("Sword Master"), SWORD_GUARDIAN, 15, .@label$);
		areamonster(.@map$, 267, 96, 277, 132, _("Bow Master"), BOW_GUARDIAN, 15, .@label$);
		break;
	case 95:
		areamonster(.@map$, 352, 96, 362, 132, _("Beelzebub"), BEELZEBUB, 1, .@label$);
		areamonster(.@map$, 352, 96, 362, 132, _("Hunter Fly"), HUNTER_FLY, 30, .@label$);
		areamonster(.@map$, 352, 96, 362, 132, _("Steel Chonchon"), STEEL_CHONCHON, 5, .@label$);
		areamonster(.@map$, 352, 96, 362, 132, _("Dragon FLy"), DRAGON_FLY, 5, .@label$);
		areamonster(.@map$, 352, 96, 362, 132, _("Chonchon"), CHONCHON, 5, .@label$);
		break;
	case 96:
		areamonster(.@map$, 9, 9, 19, 45, _("Valkyrie"), G_RANDGRIS, 5, .@label$);
		areamonster(.@map$, 9, 9, 19, 45, _("Skeggiold"), SKEGGIOLD_, 10, .@label$);
		areamonster(.@map$, 9, 9, 19, 45, _("Skeggiold"), SKEGGIOLD, 10, .@label$);
		break;
	case 97:
		areamonster(.@map$, 93, 9, 103, 45, _("Incarnation of Morroc"), MOROCC_1, 5, .@label$);
		areamonster(.@map$, 93, 9, 103, 45, _("Incarnation of Morroc"), MOROCC_2, 5, .@label$);
		areamonster(.@map$, 93, 9, 103, 45, _("Incarnation of Morroc"), MOROCC_3, 5, .@label$);
		areamonster(.@map$, 93, 9, 103, 45, _("Incarnation of Morroc"), MOROCC_4, 5, .@label$);
		break;
	case 98:
		areamonster(.@map$, 181, 9, 191, 45, _("Kathryne Keyron"), KATRINN, 2, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Seyren Windsor"), SEYREN, 2, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Margaretha Sorin"), MAGALETA, 2, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Eremes Guile"), EREMES, 2, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Howard Alt-Eisen"), HARWORD, 2, .@label$);
		areamonster(.@map$, 181, 9, 191, 45, _("Cecil Damon"), SHECIL, 2, .@label$);
		break;
	case 99:
		for (.@i = 1; .@i <= 7; ++.@i) {
			.@mob_ran = rand(1, 30);
			if (.@mob_ran == 1)
				areamonster(.@map$, 267, 9, 277, 45, _("Kathryne Keyron"), KATRINN, 2, .@label$);
			else if (.@mob_ran == 2)
				areamonster(.@map$, 267, 9, 277, 45, _("Seyren Windsor"), SEYREN, 2, .@label$);
			else if (.@mob_ran == 3)
				areamonster(.@map$, 267, 9, 277, 45, _("Margaretha Sorin"), MAGALETA, 2, .@label$);
			else if (.@mob_ran == 4)
				areamonster(.@map$, 267, 9, 277, 45, _("Eremes Guile"), EREMES, 2, .@label$);
			else if (.@mob_ran == 5)
				areamonster(.@map$, 267, 9, 277, 45, _("Howard Alt-Eisen"), HARWORD, 2, .@label$);
			else if (.@mob_ran == 6)
				areamonster(.@map$, 267, 9, 277, 45, _("Cecil Damon"), SHECIL, 2, .@label$);
			else if (.@mob_ran == 7)
				areamonster(.@map$, 267, 9, 277, 45, _("Incarnation of Morroc"), MOROCC_1, 5, .@label$);
			else if (.@mob_ran == 8)
				areamonster(.@map$, 267, 9, 277, 45, _("Incarnation of Morroc"), MOROCC_2, 5, .@label$);
			else if (.@mob_ran == 9)
				areamonster(.@map$, 267, 9, 277, 45, _("Incarnation of Morroc"), MOROCC_3, 5, .@label$);
			else if (.@mob_ran == 10)
				areamonster(.@map$, 267, 9, 277, 45, _("Incarnation of Morroc"), MOROCC_4, 5, .@label$);
			else if (.@mob_ran == 11)
				areamonster(.@map$, 267, 9, 277, 45, _("Valkyrie"), G_RANDGRIS, 5, .@label$);
			else if (.@mob_ran == 12)
				areamonster(.@map$, 267, 9, 277, 45, _("Skeggiold"), SKEGGIOLD_, 10, .@label$);
			else if (.@mob_ran == 13)
				areamonster(.@map$, 267, 9, 277, 45, _("Skeggiold"), SKEGGIOLD, 10, .@label$);
			else if (.@mob_ran == 14)
				areamonster(.@map$, 267, 9, 277, 45, _("Seyren Windsor"), SEYREN, 15, .@label$);
			else if (.@mob_ran == 15)
				areamonster(.@map$, 267, 9, 277, 45, _("Bloody Knight"), BLOODY_KNIGHT, 10, .@label$);
			else if (.@mob_ran == 16)
				areamonster(.@map$, 267, 9, 277, 45, _("Abysmal Knight"), KNIGHT_OF_ABYSS, 10, .@label$);
			else if (.@mob_ran == 17)
				areamonster(.@map$, 267, 9, 277, 45, _("Wanderer"), WANDER_MAN, 10, .@label$);
			else if (.@mob_ran == 18)
				areamonster(.@map$, 267, 9, 277, 45, _("Sword Master"), SWORD_GUARDIAN, 15, .@label$);
			else if (.@mob_ran == 19)
				areamonster(.@map$, 267, 9, 277, 45, _("Bow Master"), BOW_GUARDIAN, 15, .@label$);
			else if (.@mob_ran == 20)
				areamonster(.@map$, 267, 9, 277, 45, _("Kathryne Keyron"), KATRINN, 15, .@label$);
			else if (.@mob_ran == 21)
				areamonster(.@map$, 267, 9, 277, 45, _("Elder"), ELDER, 10, .@label$);
			else if (.@mob_ran == 22)
				areamonster(.@map$, 267, 9, 277, 45, _("Laurell Weinder"), RAWREL, 10, .@label$);
			else if (.@mob_ran == 23)
				areamonster(.@map$, 267, 9, 277, 45, _("Wind Ghost"), WIND_GHOST, 10, .@label$);
			else if (.@mob_ran == 24)
				areamonster(.@map$, 267, 9, 277, 45, _("Marduk"), MARDUK, 10, .@label$);
			else if (.@mob_ran == 25)
				areamonster(.@map$, 267, 9, 277, 45, _("Cecil Damon"), SHECIL, 10, .@label$);
			else if (.@mob_ran == 26)
				areamonster(.@map$, 267, 9, 277, 45, _("Bow Master"), BOW_GUARDIAN, 10, .@label$);
			else if (.@mob_ran == 27)
				areamonster(.@map$, 267, 9, 277, 45, _("Kavach Icarus"), KAVAC, 30, .@label$);
			else if (.@mob_ran == 28)
				areamonster(.@map$, 267, 9, 277, 45, _("Baroness of Retribution"), RETRIBUTION, 10, .@label$);
			else if (.@mob_ran == 29)
				areamonster(.@map$, 267, 9, 277, 45, _("Lady Solace"), SOLACE, 10, .@label$);
			else
				areamonster(.@map$, 267, 9, 277, 45, _("False Angel"), FAKE_ANGEL, 10, .@label$);
		}
		break;
	}
	return;
}

function	script	F_Tower_Warp	{

	setarray(.@x[2], 136, 224, 310, 395, 52, 136, 224, 310, 395,	//  2 - 10
				 52, 136, 224, 310, 395, 52, 136, 224, 310, 395,	// 11 - 20
				 52, 136, 224, 310, 395,  0, 136, 224, 310, 395,	// 21 - 30
				 52, 136, 224, 310, 395, 52, 136, 224, 310, 395,	// 31 - 40
				 52, 136, 224, 310, 395, 52, 136, 224, 310, 395,	// 41 - 50
				  0, 136, 224, 310, 395, 52, 136, 224, 310, 395,	// 51 - 60
				 52, 136, 224, 310, 395, 52, 136, 224, 310, 395,	// 61 - 70
				 52, 136, 224, 310, 395,  0, 136, 224, 310, 395,	// 71 - 80
				 52, 136, 224, 310, 395, 52, 136, 224, 310, 395,	// 81 - 90
				 52, 136, 224, 310, 395, 52, 136, 224, 309);		// 91 - 99
	setarray(.@y[2], 354, 354, 354, 354, 270, 270, 270, 270, 270,	//  2 - 10
				183, 183, 183, 183, 183,  99,  99,  99,  99,  99,	// 11 - 20
				 12,  12,  12,  12,  12,   0, 354, 354, 354, 354,	// 21 - 30
				270, 270, 270, 270, 270, 183, 183, 183, 183, 183,	// 31 - 40
				 99,  99,  99,  99,  99,  12,  12,  12,  12,  12,	// 41 - 50
				  0, 354, 354, 354, 354, 270, 270, 270, 270, 270,	// 51 - 60
				183, 183, 183, 183, 183,  99,  99,  99,  99,  99,	// 61 - 70
				 12,  12,  12,  12,  12,   0, 354, 354, 354, 354,	// 71 - 80
				270, 270, 270, 270, 270, 183, 183, 183, 183, 183,	// 81 - 90
				 99,  99,  99,  99,  99, 12,  12,  12,  12);		// 91 - 99
	.@level = getarg(0);
	.@map$ = getarg(1);
	if (.@x[.@level] > 0 && .@y[.@level] > 0)
		warp(.@map$, .@x[.@level], .@y[.@level]);
	return;
}

//== Levels 1-25 ===========================================
1@tower,50,360,0	script	Immortal Brazier#	CLEAR_NPC,{
	mes("- A Message is Engraved on the Brazier -");
	mes("The one who scatters the ashes of the darkness in this place shall become one step closer to Nacht Sieger, the Hegemon King of the Darkness...");
	next();

	setarray(.@level$[1], _("26th"), _("51st"), _("76th"));
	setarray(.@map$[1], "2@tower", "3@tower", "4@tower");
	.@i = select("26th Level", "51st Level", "76th Level");

	if (countitem(Dark_Ashes) < .@i) {
		mes("-Warning-");
		mesf("To warp to the %s Level, you need %d Ashes of the Darkness.", .@level$[.@i], .@i);
		close();
	}
	delitem(Dark_Ashes, .@i);
	mapannounce(instance_mapname("1@tower"), sprintf(_$("%s. You will be warped to the %s Level."), strcharinfo(PC_NAME), .@level$[.@i]), bc_map, C_SPRINGGREEN);
	warp(instance_mapname(.@map$[.@i]), 52, 354);
	close();

OnInstanceInit:
	initnpctimer();
	end;

OnTimer10000:
	mapannounce(instance_mapname("1@tower"), _("Notice : Taming a monster does not count towards defeating them."), bc_map, C_RED);
	stopnpctimer();
	end;
}

1@tower,29,365,1	script	#1F Controller	CLEAR_NPC,{
	end;

OnInstanceInit:
	callfunc("F_Tower_Monster", 1, instance_mapname("1@tower"), instance_npcname("#1F Controller")+"::OnMyMobDead");
	end;

OnMyMobDead:
	.@map$ = instance_mapname("1@tower");
	.@mob_dead_num = mobcount(.@map$, instance_npcname("#1F Controller")+"::OnMyMobDead");
	if (.@mob_dead_num < 1) {
		initnpctimer();
		//SetItemPartyInMap in_102floor 1
	} else {
		mapannounce(.@map$, sprintf(_$("Remaining Monsters on the 1st Level - %d"), .@mob_dead_num), bc_map, C_SPRINGGREEN);
	}
	end;

OnTimer5000:
	mapannounce(instance_mapname("1@tower"), _("All Monsters on the 1st Level have been defeated."), bc_map, C_YELLOW);
	donpcevent(instance_npcname("1FGate102tower")+"::OnEnable");
	stopnpctimer();
	end;
}

1@tower,12,393,0	script	1FGate102tower	WARPNPC,2,2,{
	end;

OnInstanceInit:
	disablenpc(instance_npcname(strnpcinfo(NPC_NAME)));
	end;

OnEnable:
	enablenpc(instance_npcname(strnpcinfo(NPC_NAME)));
	callfunc("F_Tower_Monster", atoi(replacestr(strnpcinfo(NPC_NAME), "FGate102tower", "")) + 1, strnpcinfo(NPC_MAP), instance_npcname(strnpcinfo(NPC_NAME))+"::OnMyMobDead");
	end;

OnTouch_:
	callfunc("F_Tower_Warp", atoi(replacestr(strnpcinfo(NPC_NAME), "FGate102tower", "")) + 1, strnpcinfo(NPC_MAP));
	end;

OnMyMobDead:
	.@map$ = strnpcinfo(NPC_MAP);
	.@level = atoi(replacestr(strnpcinfo(NPC_NAME), "FGate102tower", "")) + 1;
	.@mob_dead_num = mobcount(.@map$, instance_npcname(strnpcinfo(NPC_NAME))+"::OnMyMobDead");
	if (.@mob_dead_num < 1) {
		initnpctimer();
		//SetItemPartyInMap in_102floor .@level
	} else
		mapannounce(.@map$, sprintf(_$("Remaining Monsters on the %s Level - %d"), callsub(L_Display, .@level), .@mob_dead_num), bc_map, C_SPRINGGREEN);
	end;

OnTimer5000:
	.@level = atoi(replacestr(strnpcinfo(NPC_NAME), "FGate102tower", "")) + 1;
	mapannounce(strnpcinfo(NPC_MAP), sprintf(_$("All Monsters on the %s Level have been defeated."), callsub(L_Display, .@level)), bc_map, C_YELLOW);
	donpcevent(instance_npcname(.@level+"FGate102tower")+"::OnEnable");
	stopnpctimer();
	end;

L_Display:
	// Display level properly.
	.@mod = getarg(0) % 10;
	if (.@mod == 1 && getarg(0) != 11)
		return sprintf(_$("%dst"), getarg(0));
	else if (.@mod == 2 && getarg(0) != 12)
		return sprintf(_$("%dnd"), getarg(0));
	else if (.@mod == 3 && getarg(0) != 13)
		return sprintf(_$("%drd"), getarg(0));
	else
		return sprintf(_$("%dth"), getarg(0));
	end;
}

1@tower,96,393,0	duplicate(1FGate102tower)	2FGate102tower	WARPNPC,2,2
1@tower,184,393,0	duplicate(1FGate102tower)	3FGate102tower	WARPNPC,2,2
1@tower,270,393,0	duplicate(1FGate102tower)	4FGate102tower	WARPNPC,2,2
1@tower,355,393,0	duplicate(1FGate102tower)	5FGate102tower	WARPNPC,2,2
1@tower,12,309,0	duplicate(1FGate102tower)	6FGate102tower	WARPNPC,2,2
1@tower,96,309,0	duplicate(1FGate102tower)	7FGate102tower	WARPNPC,2,2
1@tower,184,309,0	duplicate(1FGate102tower)	8FGate102tower	WARPNPC,2,2
1@tower,270,309,0	duplicate(1FGate102tower)	9FGate102tower	WARPNPC,2,2
1@tower,355,309,0	duplicate(1FGate102tower)	10FGate102tower	WARPNPC,2,2
1@tower,12,222,0	duplicate(1FGate102tower)	11FGate102tower	WARPNPC,2,2
1@tower,96,222,0	duplicate(1FGate102tower)	12FGate102tower	WARPNPC,2,2
1@tower,184,222,0	duplicate(1FGate102tower)	13FGate102tower	WARPNPC,2,2
1@tower,270,222,0	duplicate(1FGate102tower)	14FGate102tower	WARPNPC,2,2
1@tower,355,222,0	duplicate(1FGate102tower)	15FGate102tower	WARPNPC,2,2
1@tower,12,138,0	duplicate(1FGate102tower)	16FGate102tower	WARPNPC,2,2
1@tower,96,138,0	duplicate(1FGate102tower)	17FGate102tower	WARPNPC,2,2
1@tower,184,138,0	duplicate(1FGate102tower)	18FGate102tower	WARPNPC,2,2
1@tower,270,138,0	duplicate(1FGate102tower)	19FGate102tower	WARPNPC,2,2
1@tower,355,138,0	duplicate(1FGate102tower)	20FGate102tower	WARPNPC,2,2
1@tower,12,51,0	duplicate(1FGate102tower)	21FGate102tower	WARPNPC,2,2
1@tower,96,51,0	duplicate(1FGate102tower)	22FGate102tower	WARPNPC,2,2
1@tower,184,51,0	duplicate(1FGate102tower)	23FGate102tower	WARPNPC,2,2
1@tower,270,51,0	duplicate(1FGate102tower)	24FGate102tower	WARPNPC,2,2

1@tower,355,51,0	script	25FGate102tower	WARPNPC,2,2,{
	end;

OnInstanceInit:
	disablenpc(instance_npcname("25FGate102tower"));
	end;

OnEnable:
	enablenpc(instance_npcname("25FGate102tower"));
	initnpctimer();
	end;

OnTouch_:
	getitem(Dark_Ashes, 1);
	warp(instance_mapname("2@tower"), 52, 354);
	end;

OnTimer120000:
	disablenpc(instance_npcname("25FGate102tower"));
	donpcevent(instance_npcname("25FGate102tower-2")+"::OnEnable");
	stopnpctimer();
	end;
}

1@tower,355,51,0	script	25FGate102tower-2	WARPNPC,2,2,{
	end;

OnInstanceInit:
	disablenpc(instance_npcname("25FGate102tower-2"));
	end;

OnEnable:
	enablenpc(instance_npcname("25FGate102tower-2"));
	end;

OnTouch_:
	warp(instance_mapname("2@tower"), 52, 354);
	end;
}

1@tower,71,4,0	script	#Broadcast Mode1	CLEAR_NPC,{
	end;

OnInstanceInit:
	initnpctimer();
	end;

OnTimer15000:
OnTimer60000:
	mapannounce(instance_mapname("1@tower"), _("Notice : In any abnormal situation where you defeat a monster, you can't advance to the next level!"), bc_map, C_RED);
	end;
OnTimer120000:
	mapannounce(instance_mapname("1@tower"), _("Notice : In any abnormal situation where you defeat a monster, you can't advance to the next level!"), bc_map, C_RED);
	stopnpctimer();
	end;
}

1@tower,71,1,0	script	#Manager Mode1	CLEAR_NPC,{
	callfunc("F_GM_NPC");
	mes("Please enter the password.");
	.@i = callfunc("F_GM_NPC", "dmc2008", 1);
	next();
	if (.@i == 1) {
		mes("This NPC manages the tower from the 1st to the 25th Level.");
		mes("Please enter the Level number to open.");
		mes("(i.g.: 1F->1, 25F->25)");
		input(.@input, 1, 25);
		next();
		if (.@input < 1 || .@input > 25) {
			mes("You can only enter a number from 1 to 25.");
		} else {
			donpcevent(instance_npcname(.@input+"FGate102tower")+"::OnEnable");
			mesf("*** Level %d is now being opened. ***", .@input);
		}
	}
	close();
}

//== Levels 26-50 ==========================================
2@tower,29,365,2	script	Immortal Furnace#1	CLEAR_NPC,{
	end;

OnInstanceInit:
	callfunc("F_Tower_Monster", 26, instance_mapname("2@tower"), instance_npcname("Immortal Furnace#1")+"::OnMyMobDead");
	end;

OnMyMobDead:
	.@map$ = instance_mapname("2@tower");
	.@mob_dead_num = mobcount(.@map$, instance_npcname("Immortal Furnace#1")+"::OnMyMobDead");
	if (.@mob_dead_num < 1) {
		initnpctimer();
		//SetItemPartyInMap in_102floor 26
	} else {
		mapannounce(.@map$, sprintf(_$("Remaining Monsters on the 26th Level - %d"), .@mob_dead_num), bc_map, C_SPRINGGREEN);
	}
	end;

OnTimer5000:
	mapannounce(instance_mapname("2@tower"), _("All Monsters on the 26th Level have been defeated."), bc_map, C_YELLOW);
	donpcevent(instance_npcname("26FGate102tower")+"::OnEnable");
	stopnpctimer();
	end;
}

2@tower,12,393,0	duplicate(1FGate102tower)	26FGate102tower	WARPNPC,2,2
2@tower,96,393,0	duplicate(1FGate102tower)	27FGate102tower	WARPNPC,2,2
2@tower,184,393,0	duplicate(1FGate102tower)	28FGate102tower	WARPNPC,2,2
2@tower,270,393,0	duplicate(1FGate102tower)	29FGate102tower	WARPNPC,2,2
2@tower,355,393,0	duplicate(1FGate102tower)	30FGate102tower	WARPNPC,2,2
2@tower,12,309,0	duplicate(1FGate102tower)	31FGate102tower	WARPNPC,2,2
2@tower,96,309,0	duplicate(1FGate102tower)	32FGate102tower	WARPNPC,2,2
2@tower,184,309,0	duplicate(1FGate102tower)	33FGate102tower	WARPNPC,2,2
2@tower,270,309,0	duplicate(1FGate102tower)	34FGate102tower	WARPNPC,2,2
2@tower,355,309,0	duplicate(1FGate102tower)	35FGate102tower	WARPNPC,2,2
2@tower,12,222,0	duplicate(1FGate102tower)	36FGate102tower	WARPNPC,2,2
2@tower,96,222,0	duplicate(1FGate102tower)	37FGate102tower	WARPNPC,2,2
2@tower,184,222,0	duplicate(1FGate102tower)	38FGate102tower	WARPNPC,2,2
2@tower,270,222,0	duplicate(1FGate102tower)	39FGate102tower	WARPNPC,2,2
2@tower,355,222,0	duplicate(1FGate102tower)	40FGate102tower	WARPNPC,2,2
2@tower,12,138,0	duplicate(1FGate102tower)	41FGate102tower	WARPNPC,2,2
2@tower,96,138,0	duplicate(1FGate102tower)	42FGate102tower	WARPNPC,2,2
2@tower,184,138,0	duplicate(1FGate102tower)	43FGate102tower	WARPNPC,2,2
2@tower,270,138,0	duplicate(1FGate102tower)	44FGate102tower	WARPNPC,2,2
2@tower,355,138,0	duplicate(1FGate102tower)	45FGate102tower	WARPNPC,2,2
2@tower,12,51,0	duplicate(1FGate102tower)	46FGate102tower	WARPNPC,2,2
2@tower,96,51,0	duplicate(1FGate102tower)	47FGate102tower	WARPNPC,2,2
2@tower,184,51,0	duplicate(1FGate102tower)	48FGate102tower	WARPNPC,2,2
2@tower,270,51,0	duplicate(1FGate102tower)	49FGate102tower	WARPNPC,2,2

2@tower,355,51,0	script	50FGate102tower	WARPNPC,2,2,{
	end;

OnInstanceInit:
	disablenpc(instance_npcname("50FGate102tower"));
	end;

OnEnable:
	enablenpc(instance_npcname("50FGate102tower"));
	initnpctimer();
	end;

OnTouch_:
	getitem(Dark_Ashes, 1);
	warp(instance_mapname("3@tower"), 52, 354);
	end;

OnTimer120000:
	disablenpc(instance_npcname("50FGate102tower"));
	donpcevent(instance_npcname("50FGate102tower-2")+"::OnEnable");
	stopnpctimer();
	end;
}

2@tower,355,51,0	script	50FGate102tower-2	WARPNPC,2,2,{
	end;

OnInstanceInit:
	disablenpc(instance_npcname("50FGate102tower-2"));
	end;

OnEnable:
	enablenpc(instance_npcname("50FGate102tower-2"));
	end;

OnTouch_:
	warp(instance_mapname("3@tower"), 52, 354);
	end;
}

2@tower,71,1,0	script	#Manager Mode2	CLEAR_NPC,{
	callfunc("F_GM_NPC");
	mes("Please enter the password.");
	.@i = callfunc("F_GM_NPC", "dmc2008", 1);
	next();
	if (.@i == 1) {
		mes("This NPC manages the tower from the 26st to the 50th Level.");
		mes("Please enter the Level number to open.");
		mes("(i.g.: 26F->26, 50F->50)");
		input(.@input, 26, 50);
		next();
		if (.@onput < 26 || .@input > 50) {
			mes("You can only enter a number from 26 to 50.");
		} else {
			donpcevent(instance_npcname(.@input+"FGate102tower")+"::OnEnable");
			mesf("*** Level %d is now being opened. ***", .@input);
		}
	}
	close();
}

//== Levels 51-75 ==========================================
3@tower,29,365,2	script	Immortal Furnace#2	CLEAR_NPC,{
	end;

OnInstanceInit:
	callfunc("F_Tower_Monster", 51, instance_mapname("3@tower"), instance_npcname("Immortal Furnace#2")+"::OnMyMobDead");
	end;

OnMyMobDead:
	.@map$ = instance_mapname("3@tower");
	.@mob_dead_num = mobcount(.@map$, instance_npcname("Immortal Furnace#2")+"::OnMyMobDead");
	if (.@mob_dead_num < 1) {
		initnpctimer();
		//SetItemPartyInMap in_102floor 51
	} else {
		mapannounce(.@map$, sprintf(_$("Remaining Monsters on the 51st Level - %d"), .@mob_dead_num), bc_map, C_SPRINGGREEN);
	}
	end;

OnTimer5000:
	mapannounce(instance_mapname("3@tower"), _("All Monsters on the 51st Level have been defeated."), bc_map, C_YELLOW);
	donpcevent(instance_npcname("51FGate102tower")+"::OnEnable");
	stopnpctimer();
	end;
}

3@tower,12,393,0	duplicate(1FGate102tower)	51FGate102tower	WARPNPC,2,2
3@tower,96,393,0	duplicate(1FGate102tower)	52FGate102tower	WARPNPC,2,2
3@tower,184,393,0	duplicate(1FGate102tower)	53FGate102tower	WARPNPC,2,2
3@tower,270,393,0	duplicate(1FGate102tower)	54FGate102tower	WARPNPC,2,2
3@tower,355,393,0	duplicate(1FGate102tower)	55FGate102tower	WARPNPC,2,2
3@tower,12,309,0	duplicate(1FGate102tower)	56FGate102tower	WARPNPC,2,2
3@tower,96,309,0	duplicate(1FGate102tower)	57FGate102tower	WARPNPC,2,2
3@tower,184,309,0	duplicate(1FGate102tower)	58FGate102tower	WARPNPC,2,2
3@tower,270,309,0	duplicate(1FGate102tower)	59FGate102tower	WARPNPC,2,2
3@tower,355,309,0	duplicate(1FGate102tower)	60FGate102tower	WARPNPC,2,2
3@tower,12,222,0	duplicate(1FGate102tower)	61FGate102tower	WARPNPC,2,2
3@tower,96,222,0	duplicate(1FGate102tower)	62FGate102tower	WARPNPC,2,2
3@tower,184,222,0	duplicate(1FGate102tower)	63FGate102tower	WARPNPC,2,2
3@tower,270,222,0	duplicate(1FGate102tower)	64FGate102tower	WARPNPC,2,2
3@tower,355,222,0	duplicate(1FGate102tower)	65FGate102tower	WARPNPC,2,2
3@tower,12,138,0	duplicate(1FGate102tower)	66FGate102tower	WARPNPC,2,2
3@tower,96,138,0	duplicate(1FGate102tower)	67FGate102tower	WARPNPC,2,2
3@tower,184,138,0	duplicate(1FGate102tower)	68FGate102tower	WARPNPC,2,2
3@tower,270,138,0	duplicate(1FGate102tower)	69FGate102tower	WARPNPC,2,2
3@tower,355,138,0	duplicate(1FGate102tower)	70FGate102tower	WARPNPC,2,2
3@tower,12,51,0	duplicate(1FGate102tower)	71FGate102tower	WARPNPC,2,2
3@tower,96,51,0	duplicate(1FGate102tower)	72FGate102tower	WARPNPC,2,2
3@tower,184,51,0	duplicate(1FGate102tower)	73FGate102tower	WARPNPC,2,2
3@tower,270,51,0	duplicate(1FGate102tower)	74FGate102tower	WARPNPC,2,2

3@tower,355,51,0	script	75FGate102tower	WARPNPC,1,1,{
	end;

OnInstanceInit:
	disablenpc(instance_npcname("75FGate102tower"));
	end;

OnEnable:
	enablenpc(instance_npcname("75FGate102tower"));
	initnpctimer();
	end;

OnTouch_:
	getitem(Dark_Ashes, 1);
	warp(instance_mapname("4@tower"), 52, 354);
	end;

OnTimer120000:
	disablenpc(instance_npcname("75FGate102tower"));
	donpcevent(instance_npcname("75FGate102tower-2")+"::OnEnable");
	stopnpctimer();
	end;
}

3@tower,355,51,0	script	75FGate102tower-2	WARPNPC,2,2,{
	end;

OnInstanceInit:
	disablenpc(instance_npcname("75FGate102tower-2"));
	end;

OnEnable:
	enablenpc(instance_npcname("75FGate102tower-2"));
	end;

OnTouch_:
	warp(instance_mapname("4@tower"), 52, 354);
	end;
}

3@tower,71,1,0	script	#Manager Mode3	CLEAR_NPC,{
	callfunc("F_GM_NPC");
	mes("Please enter the password.");
	.@i = callfunc("F_GM_NPC", "dmc2008", 1);
	next();
	if (.@i == 1) {
		mes("This NPC manages the tower from the 51st to the 75th Level.");
		mes("Please enter the Level number to open.");
		mes("(i.g.: 51F->51, 75F->75)");
		input(.@input, 51, 75);
		next();
		if (.@input < 51 || .@input > 75) {
			mes("You can only enter a number from 51 to 75.");
		} else {
			donpcevent(instance_npcname(.@input+"FGate102tower")+"::OnEnable");
			mesf("*** Level %d is now being opened. ***", .@input);
		}
	}
	close();
}

//== Levels 76-99 ==========================================
4@tower,29,365,2	script	Immortal Furnace#3	CLEAR_NPC,{
	end;

OnInstanceInit:
	callfunc("F_Tower_Monster", 76, instance_mapname("4@tower"), instance_npcname("Immortal Furnace#3")+"::OnMyMobDead");
	end;

OnMyMobDead:
	.@map$ = instance_mapname("4@tower");
	.@mob_dead_num = mobcount(.@map$, instance_npcname("Immortal Furnace#3")+"::OnMyMobDead");
	if (.@mob_dead_num < 1) {
		initnpctimer();
		//SetItemPartyInMap in_102floor 76
	} else {
		mapannounce(.@map$, sprintf(_$("Remaining Monsters on the 76th Level - %d"), .@mob_dead_num), bc_map, C_SPRINGGREEN);
	}
	end;

OnTimer5000:
	mapannounce(instance_mapname("4@tower"), _("All Monsters on the 76th Level have been defeated."), bc_map, C_YELLOW);
	donpcevent(instance_npcname("76FGate102tower")+"::OnEnable");
	stopnpctimer();
	end;
}

4@tower,12,393,0	duplicate(1FGate102tower)	76FGate102tower	WARPNPC,2,2
4@tower,96,393,0	duplicate(1FGate102tower)	77FGate102tower	WARPNPC,2,2
4@tower,184,393,0	duplicate(1FGate102tower)	78FGate102tower	WARPNPC,2,2
4@tower,270,393,0	duplicate(1FGate102tower)	79FGate102tower	WARPNPC,2,2
4@tower,355,393,0	duplicate(1FGate102tower)	80FGate102tower	WARPNPC,2,2
4@tower,12,309,0	duplicate(1FGate102tower)	81FGate102tower	WARPNPC,2,2
4@tower,96,309,0	duplicate(1FGate102tower)	82FGate102tower	WARPNPC,2,2
4@tower,184,309,0	duplicate(1FGate102tower)	83FGate102tower	WARPNPC,2,2
4@tower,270,309,0	duplicate(1FGate102tower)	84FGate102tower	WARPNPC,2,2
4@tower,355,309,0	duplicate(1FGate102tower)	85FGate102tower	WARPNPC,2,2
4@tower,12,222,0	duplicate(1FGate102tower)	86FGate102tower	WARPNPC,2,2
4@tower,96,222,0	duplicate(1FGate102tower)	87FGate102tower	WARPNPC,2,2
4@tower,184,222,0	duplicate(1FGate102tower)	88FGate102tower	WARPNPC,2,2
4@tower,270,222,0	duplicate(1FGate102tower)	89FGate102tower	WARPNPC,2,2
4@tower,355,222,0	duplicate(1FGate102tower)	90FGate102tower	WARPNPC,2,2
4@tower,12,138,0	duplicate(1FGate102tower)	91FGate102tower	WARPNPC,2,2
4@tower,96,138,0	duplicate(1FGate102tower)	92FGate102tower	WARPNPC,2,2
4@tower,184,138,0	duplicate(1FGate102tower)	93FGate102tower	WARPNPC,2,2
4@tower,270,138,0	duplicate(1FGate102tower)	94FGate102tower	WARPNPC,2,2
4@tower,355,138,0	duplicate(1FGate102tower)	95FGate102tower	WARPNPC,2,2
4@tower,12,51,0	duplicate(1FGate102tower)	96FGate102tower	WARPNPC,2,2
4@tower,96,51,0	duplicate(1FGate102tower)	97FGate102tower	WARPNPC,2,2
4@tower,184,51,0	duplicate(1FGate102tower)	98FGate102tower	WARPNPC,2,2

4@tower,271,51,0	script	99FGate102tower	WARPNPC,2,2,{
	end;

OnInstanceInit:
	disablenpc(instance_npcname("99FGate102tower"));
	end;

OnEnable:
	enablenpc(instance_npcname("99FGate102tower"));
	initnpctimer();
	end;

OnTouch_:
	getitem(Dark_Ashes, 1);
	warp(instance_mapname("5@tower"), 101, 72);
	end;

OnTimer120000:
	disablenpc(instance_npcname("99FGate102tower"));
	donpcevent(instance_npcname("99FGate102tower-2")+"::OnEnable");
	stopnpctimer();
	end;
}

4@tower,271,51,0	script	99FGate102tower-2	WARPNPC,2,2,{
	end;

OnInstanceInit:
	disablenpc(instance_npcname("99FGate102tower-2"));
	end;

OnEnable:
	enablenpc(instance_npcname("99FGate102tower-2"));
	end;

OnTouch_:
	warp(instance_mapname("5@tower"), 101, 72);
	end;
}

4@tower,71,1,0	script	#Manager Mode4	CLEAR_NPC,{
	callfunc("F_GM_NPC");
	mes("Please enter the password.");
	.@i = callfunc("F_GM_NPC", "dmc2008", 1);
	next();
	if (.@i == 1) {
		mes("This NPC manages the tower from the 76th to the 99th Level.");
		mes("Please enter the Level number to open.");
		mes("(i.g.: 76F->76, 99F->99)");
		input(.@input, 76, 99);
		next();
		if (.@input < 76 || .@input > 99) {
			mes("You can only enter a number from 76 to 99.");
		} else {
			donpcevent(instance_npcname(.@input+"FGate102tower")+"::OnEnable");
			mesf("*** Level %d is now being opened. ***", .@input);
		}
	}
	close();
}

//== Level 100 =============================================
5@tower,106,109,2	script	Lucid Crystal#102	CLEAR_NPC,{
	if (in_102tower < 10) {
		mes("^0000ffA mysterious voice echoes through the room as you touch the lucid crystal radiating a strong light.^000000");
		next();
		mes("[Mysterious Voice]");
		mes("Welcome to my place, intruders. I've had fun watching you endure all the difficulties I've set before you.");
		next();
		mes("[Mysterious Voice]");
		mes("Unfortunately, the time has come to end the show.");
		next();
		mes("[Mysterious Voice]");
		mes("It's still too early to celebrate your victory against my right-hand man Knothen because he isn't completely destroyed!");
		next();
		mes("[Mysterious Voice]");
		mes("I shall resurrect him for your next show. Defeat him again, and then I'll gladly accept your challenge.");
		next();
		mes("[Mysterious Voice]");
		mes("Good-bye for now.");
		mes("Once again, I had such a great time, humans. I look forward to seeing you again.");
		next();
		mes("^0000ffAs soon as the voice stopped talking, an irresistible force lifted and moved you somewhere else.");
		close2();
		in_102tower = 10;
		warp("alberta", 223, 36);
	} else {
		mes("^0000ffThe radiating crystal piece seems to beckon you, just like last time.^000000");
		next();
		mes("[Mysterious Voice]");
		mes("I must have underestimated you... I didn't expect to see you again.");
		next();
		mes("[Mysterious Voice]");
		mes("I can smell your sweat, hear the gasps of your exhaustion in combat. Ah~ The human desire for victory always excites me.");
		next();
		mes("[Mysterious Voice]");
		mes("I now allow you to come receive an audience from me. Come to me, to Nacht Sieger the Hegemon-King of the Darkness!");
		close2();
		warp(instance_mapname("6@tower"), 32, 12);
	}
	end;

OnInstanceInit:
OnDisable:
	disablenpc(instance_npcname("Lucid Crystal#102"));
	end;

OnEnable:
	enablenpc(instance_npcname("Lucid Crystal#102"));
	donpcevent(instance_npcname("#102Effect1")+"::OnEnable");
	end;
}

5@tower,106,109,2	script	#102Effect1	CLEAR_NPC,{
	end;

OnInstanceInit:
	disablenpc(instance_npcname("#102Effect1"));
	end;

OnDisable:
	disablenpc(instance_npcname("#102Effect1"));
	end;

OnEnable:
	enablenpc(instance_npcname("#102Effect1"));
	initnpctimer();
	end;

OnTimer500:
	specialeffect(EF_ENHANCE);
	stopnpctimer();
	donpcevent(instance_npcname("#102Effect2")+"::OnEnable");
	end;
}

5@tower,106,109,2	script	#102Effect2	CLEAR_NPC,{
	end;

OnInstanceInit:
	disablenpc(instance_npcname("#102Effect2"));
	end;

OnDisable:
	disablenpc(instance_npcname("#102Effect2"));
	end;

OnEnable:
	enablenpc(instance_npcname("#102Effect2"));
	initnpctimer();
	end;

OnTimer500:
	specialeffect(EF_ENHANCE);
	stopnpctimer();
	donpcevent(instance_npcname("#102Effect1")+"::OnEnable");
	end;
}

5@tower,82,112,2	script	#102FShadowDust1	CLEAR_NPC,{
	end;

OnInstanceInit:
	donpcevent(instance_npcname("#102FShadowDust")+"::OnEnable");
	monster(instance_mapname("5@tower"), 83, 85, _("Entweihen Crothen"), ENTWEIHEN, 1, instance_npcname("#102FShadowDust1")+"::OnMyMobDead");
	end;

OnMyMobDead:
	.@map$ = instance_mapname("5@tower");
	.@mob_dead_num = mobcount(.@map$, instance_npcname("#102FShadowDust1")+"::OnMyMobDead");
	if (.@mob_dead_num < 1) {
		mapannounce(.@map$, _("Mysterious Voice: Who are you to dare intrude upon my sanctuary?!"), bc_map, C_YELLOW);
		donpcevent(instance_npcname("#102FShadowDust")+"::OnDisable");
		donpcevent(instance_npcname("Lucid Crystal#102")+"::OnEnable");
		//SetItemPartyInMap in_102floor 100
	}
	end;
}

5@tower,82,113,2	script	#102FShadowDust	CLEAR_NPC,{
	end;

OnInstanceInit:
	disablenpc(instance_npcname("#102FShadowDust"));
	end;

OnDisable:
	killmonsterall(instance_mapname("5@tower"));
	end;

OnEnable:
	.@map$ = instance_mapname("5@tower");
	monster(.@map$, 72, 93, _("Thorny Skeleton"), G_ENTWEIHEN_R, 1);
	monster(.@map$, 70, 87, _("Thorn of Magic"), G_ENTWEIHEN_M, 1);
	monster(.@map$, 68, 83, _("Thorn of Pureness"), G_ENTWEIHEN_S, 1);
	monster(.@map$, 70, 80, _("Thorny Skeleton"), G_ENTWEIHEN_R, 1);
	monster(.@map$, 74, 81, _("Thorn of Magic"), G_ENTWEIHEN_M, 1);
	monster(.@map$, 78, 72, _("Thorn of Magic"), G_ENTWEIHEN_M, 1);
	monster(.@map$, 81, 70, _("Thorny Skeleton"), G_ENTWEIHEN_R, 1);
	monster(.@map$, 78, 84, _("Thorn of Recovery"), G_ENTWEIHEN_H, 1);
	monster(.@map$, 85, 72, _("Thorn of Magic"), G_ENTWEIHEN_M, 1);
	monster(.@map$, 91, 74, _("Thorny Skeleton"), G_ENTWEIHEN_R, 1);
	monster(.@map$, 79, 77, _("Thorn of Pureness"), G_ENTWEIHEN_S, 1);
	monster(.@map$, 82, 80, _("Thorn of Recovery"), G_ENTWEIHEN_H, 1);
	monster(.@map$, 87, 83, _("Thorn of Recovery"), G_ENTWEIHEN_H, 1);
	monster(.@map$, 80, 92, _("Thorn of Pureness"), G_ENTWEIHEN_S, 1);
	monster(.@map$, 81, 89, _("Thorny Skeleton"), G_ENTWEIHEN_R, 1);
	monster(.@map$, 85, 93, _("Thorn of Magic"), G_ENTWEIHEN_M, 1);
	monster(.@map$, 86, 90, _("Thorn of Recovery"), G_ENTWEIHEN_H, 1);
	monster(.@map$, 88, 88, _("Thorny Skeleton"), G_ENTWEIHEN_R, 1);
	monster(.@map$, 91, 87, _("Thorn of Magic"), G_ENTWEIHEN_M, 1);
	monster(.@map$, 95, 94, _("Thorn of Magic"), G_ENTWEIHEN_M, 1);
	monster(.@map$, 91, 96, _("Thorny Skeleton"), G_ENTWEIHEN_R, 1);
	monster(.@map$, 90, 82, _("Thorn of Pureness"), G_ENTWEIHEN_S, 1);
	monster(.@map$, 96, 98, _("Thorn of Magic"), G_ENTWEIHEN_M, 1);
	monster(.@map$, 83, 76, _("Thorny Skeleton"), G_ENTWEIHEN_R, 1);
	monster(.@map$, 74, 85, _("Thorny Skeleton"), G_ENTWEIHEN_R, 1);
	switch (rand(1, 3)) {
	case 1:
		monster(.@map$, 82, 85, _("Thorny Skeleton"), G_ENTWEIHEN_R, 1);
		break;
	case 2:
		monster(.@map$, 82, 85, _("Thorn of Magic"), G_ENTWEIHEN_M, 1);
		break;
	case 3:
		monster(.@map$, 82, 85, _("Thorn of Pureness"), G_ENTWEIHEN_S, 1);
		break;
	}
	switch (rand(1, 3)) {
	case 1:
		monster(.@map$, 84, 85, _("Thorny Skeleton"), G_ENTWEIHEN_R, 1);
		break;
	case 2:
		monster(.@map$, 84, 85, _("Thorn of Magic"), G_ENTWEIHEN_M, 1);
		break;
	case 3:
		monster(.@map$, 84, 85, _("Thorn of Pureness"), G_ENTWEIHEN_S, 1);
		break;
	}
	end;
}

5@tower,71,1,0	script	#Manager Mode5	CLEAR_NPC,{
	callfunc("F_GM_NPC");
	mes("This NPC manages the crystal on the 100th Level. Please enter the password.");
	.@i = callfunc("F_GM_NPC", "dmc2008", 1);
	next();
	if (.@i == 1) {
		donpcevent(instance_npcname("Lucid Crystal#102")+"::OnEnable");
		mes("The 100th Level's crystal has been activated.");
	} else
		mes("Please enter the correct password.");
	close();
}

//== Level 101 =============================================
6@tower,45,89,2	script	Life Spring#1	CLEAR_NPC,{
	mes("^0066ffYou took a sip of the spring's clear water, and you feel invigorated.^000000");
	heal((MaxHp - Hp), (MaxSp - Sp));
	close();

OnInstanceInit:
	donpcevent(instance_npcname("Life Spring#2")+"::OnEnable");
	end;
}

6@tower,45,89,2	script	Life Spring#2	CLEAR_NPC,{
	end;

OnEnable:
	specialeffect(EF_BUBBLE);
	initnpctimer();
	end;

OnTimer2000:
	stopnpctimer();
	donpcevent(instance_npcname("Life Spring#3")+"::OnEnable");
	end;
}

6@tower,45,89,2	script	Life Spring#3	CLEAR_NPC,{
	end;

OnEnable:
	specialeffect(EF_BUBBLE);
	initnpctimer();
	end;

OnTimer2000:
	stopnpctimer();
	donpcevent(instance_npcname("Life Spring#2")+"::OnEnable");
	end;
}

6@tower,32,100,0	warp	102FGate102tower	2,2,6@tower,155,64

6@tower,156,151,2	script	Tyrant's Throne#	CLEAR_NPC,{
	end;

OnInstanceInit:
	areamonster(instance_mapname("6@tower"), 154, 73, 156, 75, _("Watcher's Son"), ANOPHELES, 10, instance_npcname("Tyrant's Throne#")+"::OnMyMobDead");
	end;

OnMyMobDead:
	.@mob_dead_num = mobcount(instance_mapname("6@tower"), instance_npcname("Tyrant's Throne#")+"::OnMyMobDead");
	if (.@mob_dead_num < 1) {
		donpcevent(instance_npcname("#1st Beeper")+"::OnEnable");
		disablenpc(instance_npcname("Tyrant's Throne#"));
	}
	end;
}

6@tower,156,151,2	script	#1st Beeper	CLEAR_NPC,{
	end;

OnEnable:
	initnpctimer();
	end;

OnTimer500:
	mapannounce(instance_mapname("6@tower"), _("Guests, huh? I hope you've come here knowing that you'll be buried in this place. If you didn't know, well... it's too late!"), bc_map, "0x00ffcc");
	end;

OnTimer5500:
	mapannounce(instance_mapname("6@tower"), _("This is why you adventurers always end up dead."), bc_map, "0x00ffcc");
	end;

OnTimer10500:
	mapannounce(instance_mapname("6@tower"), _("I may applaud you for your courage... Of course, I intend to play with you a little bit first."), bc_map, "0x00ffcc");
	end;

OnTimer15500:
	mapannounce(instance_mapname("6@tower"), _("You know, I like watching humans running around in fear."), bc_map, "0x00ffcc");
	end;

OnTimer20500:
	.@map$ = instance_mapname("6@tower");
	mapannounce(.@map$, _("Let's see who runs fastest. Are you ready?"), bc_map, "0x00ffcc");
	stopnpctimer();
	areamonster(.@map$, 151, 66, 153, 106, _("Bone Guardian"), ORC_SKELETON, 50, instance_npcname("#1st Beeper")+"::OnMyMobDead");
	areamonster(.@map$, 158, 66, 160, 106, _("Bone Guardian"), ORC_SKELETON, 50, instance_npcname("#1st Beeper")+"::OnMyMobDead");
	end;

OnMyMobDead:
	.@map$ = instance_mapname("6@tower");
	.@mob_dead_num = mobcount(.@map$, instance_npcname("#1st Beeper")+"::OnMyMobDead");
	if (.@mob_dead_num < 1) {
		donpcevent(instance_npcname("#2nd Beeper")+"::OnEnable");
		//SetItemPartyInMap in_102floor 101
	} else {
		mapannounce(.@map$, sprintf(_$("Remaining Targets %dea"), .@mob_dead_num), bc_map, C_SPRINGGREEN);
	}
	end;
}

6@tower,156,151,2	script	#2nd Beeper	CLEAR_NPC,{
	end;

OnEnable:
	initnpctimer();
	end;

OnTimer500:
	mapannounce(instance_mapname("6@tower"), _("Well, I guess they aren't too challenging for you."), bc_map, "0x00ffcc");
	end;

OnTimer5500:
	mapannounce(instance_mapname("6@tower"), _("Let's speed up a little bit, shall we?"), bc_map, "0x00ffcc");
	end;

OnTimer10500:
	.@map$ = instance_mapname("6@tower");
	mapannounce(.@map$, _("I demand an encore!"), bc_map, "0x00ffcc");
	stopnpctimer();
	areamonster(.@map$, 151, 66, 153, 106, _("Wind Guardian"), WIND_GHOST, 30, instance_npcname("#2nd Beeper")+"::OnMyMobDead");
	areamonster(.@map$, 158, 66, 160, 106, _("Wind Guardian"), WIND_GHOST, 30, instance_npcname("#2nd Beeper")+"::OnMyMobDead");
	end;

OnMyMobDead:
	.@map$ = instance_mapname("6@tower");
	.@mob_dead_num = mobcount(.@map$, instance_npcname("#2nd Beeper")+"::OnMyMobDead");
	if (.@mob_dead_num < 1) {
		donpcevent(instance_npcname("#3rd Beeper")+"::OnEnable");
		//SetItemPartyInMap in_102floor 102
	} else {
		mapannounce(.@map$, sprintf(_$("Remaining Targets %dea"), .@mob_dead_num), bc_map, C_SPRINGGREEN);
	}
	end;
}

6@tower,156,151,2	script	#3rd Beeper	CLEAR_NPC,{
	end;

OnEnable:
	initnpctimer();
	end;

OnTimer500:
	mapannounce(instance_mapname("6@tower"), _("Yes, this is getting exciting!"), bc_map, "0x00ffcc");
	end;

OnTimer5500:
	mapannounce(instance_mapname("6@tower"), _("I'll remember you as one of a few that have managed to entertain me."), bc_map, "0x00ffcc");
	end;

OnTimer10500:
	.@map$ = instance_mapname("6@tower");
	mapannounce(.@map$, _("How would you like to play one more round?"), bc_map, "0x00ffcc");
	stopnpctimer();
	areamonster(.@map$, 151, 66, 153, 106, _("Sword Edge Guardian"), KHALITZBURG, 20, instance_npcname("#3rd Beeper")+"::OnMyMobDead");
	areamonster(.@map$, 158, 66, 160, 106, _("Sword Edge Guardian"), KHALITZBURG, 20, instance_npcname("#3rd Beeper")+"::OnMyMobDead");
	end;

OnMyMobDead:
	.@map$ = instance_mapname("6@tower");
	.@mob_dead_num = mobcount(.@map$, instance_npcname("#3rd Beeper")+"::OnMyMobDead");
	if (.@mob_dead_num < 1) {
		donpcevent(instance_npcname("#4th Beeper")+"::OnEnable");
		//SetItemPartyInMap in_102floor 103
	} else {
		mapannounce(.@map$, sprintf(_$("Remaining Targets %dea"), .@mob_dead_num), bc_map, C_SPRINGGREEN);
	}
	end;
}

6@tower,156,151,2	script	#4th Beeper	CLEAR_NPC,{
	end;

OnEnable:
	initnpctimer();
	end;

OnTimer500:
	mapannounce(instance_mapname("6@tower"), _("Okay, the time has come to make my appearance!"), bc_map, "0x00ffcc");
	end;

OnTimer5500:
	mapannounce(instance_mapname("6@tower"), _("Do you want to know who I am?"), bc_map, "0x00ffcc");
	end;

OnTimer10500:
	.@map$ = instance_mapname("6@tower");
	mapannounce(.@map$, _("You'll soon know. Mine is the face of death!"), bc_map, "0x00ffcc");
	stopnpctimer();
	monster(.@map$, 156, 147, _("Nacht Sieger"), NAGHT_SIEGER, 1, instance_npcname("#4th Beeper")+"::OnMyMobDead");
	end;

OnMyMobDead:
	donpcevent(instance_npcname("Lost Soul#102")+"::OnEnable");
	end;
}

6@tower,169,127,2	script	Lost Soul#102	4_M_NFDEADSWDMAN,{
	if (checkweight(Knife, 1) == 0) {
		mes("You're carrying too much stuff. Why don't you put some of it away, and then come back?");
		close();
	}
	mes("[Lost Souls]");
	mes("It's you that have liberated us from the evil Nacht Sieger.");
	next();
	mes("[Lost Souls]");
	mes("Thank you so much. Now we can escape from this cold and dark place... to heaven.");
	next();
	if (countitem(Twin_Edge_B) > 0 && countitem(Twin_Edge_R) > 0) {
		mes("[Lost Souls]");
		mes("Hey, you have the remnants of Nacht Sieger with you.");
		next();
		mes("[Lost Souls]");
		mes("They may appear to be one-handed swords, but I can put them together to make a two-handed one if you want. That's the only way I can repay you for freeing me.");
		next();
		switch (select("Make a Two-Handed Sword.", "No, thanks.")) {
		case 1:
			mes("[Lost Souls]");
			mes("If it is already upgraded or has a card inside, those effects will be disappear. Is this ok with you?");
			next();
			switch (select("It's fine with me. Please make one.", "No way!")) {
			case 1:
				mes("[Lost Souls]");
				mes("Good, then I'll combine these to create a two-handed sword.");
				next();
				delitem(Twin_Edge_B, 1);
				delitem(Twin_Edge_R, 1);
				getitem(Violet_Fear, 1);
				break;
			case 2:
				mes("[Lost Souls]");
				mes("I see. I guess you aren't as greedy or ambitious as those other adventurers.");
				next();
				break;
			}
			break;
		case 2:
			mes("[Lost Souls]");
			mes("I see. I guess you aren't as greedy or ambitious as those other adventurers.");
			next();
			break;
		}
	}
	mes("[Lost Souls]");
	mes("I'd like to talk to you more, but I've... I've got to go now.");
	next();
	mes("[Lost Souls]");
	mes("Farewell, young adventurer. I wish you good luck.");
	close2();
	warp("alberta", 223, 36);
	end;

OnInstanceInit:
	disablenpc(instance_npcname("Lost Soul#102"));
	end;

OnEnable:
	initnpctimer();
	enablenpc(instance_npcname("Lost Soul#102"));
	donpcevent(instance_npcname("#Effect30")+"::OnEnable");
	//SetItemPartyInMap in_102floor 104
	end;

OnTimer500:
	mapannounce(instance_mapname("6@tower"), _("This... This can't be happening! I can't be defeated!"), bc_map, C_YELLOW);
	end;

OnTimer5500:
	mapannounce(instance_mapname("6@tower"), _("Nooo! My soul... My shell...! Nooo~!"), bc_map, C_YELLOW);
	end;

OnTimer10500:
	mapannounce(instance_mapname("6@tower"), _("Nacht Sieger's body has turned into dark ashes that scattered in the wind."), bc_map, "0x00ffcc");
	stopnpctimer();
	end;
}

6@tower,169,127,2	script	#Effect30	CLEAR_NPC,{
	end;

OnInstanceInit:
	disablenpc(instance_npcname("#Effect30"));
	end;

OnEnable:
	specialeffect(EF_CONE);
	initnpctimer();
	end;

OnTimer1000:
	stopnpctimer();
	donpcevent(instance_npcname("#Effect31")+"::OnEnable");
	end;
}

6@tower,169,127,2	script	#Effect31	CLEAR_NPC,{
	end;

OnInstanceInit:
	disablenpc(instance_npcname("#Effect31"));
	end;

OnEnable:
	specialeffect(EF_CONE);
	initnpctimer();
	end;

OnTimer1000:
	stopnpctimer();
	donpcevent(instance_npcname("#Effect30")+"::OnEnable");
	end;
}
