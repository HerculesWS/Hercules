//================= Hercules Configuration ================================
//=       _   _                     _
//=      | | | |                   | |
//=      | |_| | ___ _ __ ___ _   _| | ___  ___
//=      |  _  |/ _ \ '__/ __| | | | |/ _ \/ __|
//=      | | | |  __/ | | (__| |_| | |  __/\__ \
//=      \_| |_/\___|_|  \___|\__,_|_|\___||___/
//================= License ===============================================
//= This file is part of Hercules.
//= http://herc.ws - http://github.com/HerculesWS/Hercules
//=
//= Copyright (C) 2014-2016  Hercules Dev Team
//=
//= Hercules is free software: you can redistribute it and/or modify
//= it under the terms of the GNU General Public License as published by
//= the Free Software Foundation, either version 3 of the License, or
//= (at your option) any later version.
//=
//= This program is distributed in the hope that it will be useful,
//= but WITHOUT ANY WARRANTY; without even the implied warranty of
//= MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//= GNU General Public License for more details.
//=
//= You should have received a copy of the GNU General Public License
//= along with this program.  If not, see <http://www.gnu.org/licenses/>.
//=========================================================================
// Battle (Battle) Configuration File
//=========================================================================
// Note 1: Value is a config switch (true/false)
// Note 2: Value is in percents (100 means 100%)
// Note 3: Value is a bit field. If no description is given,
//         assume unit types (1: Pc, 2: Mob, 4: Pet, 8: Homun, 16: Mercenary)
//=========================================================================

// Who should have a baseatk value (makes str affect damage)? (Note 3)
enable_baseatk: 9

// Who can have perfect flee? (Note 3)
enable_perfect_flee: 1

// Who can have critical attacks? (Note 3)
// (Note that there are some skills that always do critical hit regardless of this)
enable_critical: 17

// Critical adjustment rate for non-players (Note 2)
mob_critical_rate: 100
critical_rate: 100

// Should normal attacks give you a walk delay? (Note 3)
// If false, characters can move as soon as they start an attack (attack animation
// or walk animation may be omitted client-side, causing cropped attacks or
// monsters that teleport to you)
// Otherwise, the delay is equal to the 'attack animation' (amotion)
attack_walk_delay: 15

// Move-delay adjustment after being hit. (Note 2)
// The 'can't walk' delay after being hit is calculated as a percentage of the damage animation duration.
// NOTE: Only affects the normal delay from a single attack, not the delay added by the multihit_delay option below.
pc_damage_walk_delay_rate: 20
damage_walk_delay_rate: 100

// Move-delay adjustment for multi-hitting attacks.
// When hit by a multi-hitting skill like Lord of Vermillion or Jupitel Thunder, characters will be
// unable to move for an additional "(number of hits -1) * multihit_delay" milliseconds.
// 80 is the setting that feels like Aegis (vs Sonic Blows)
// 230 is the setting that makes walkdelay last until the last hit (vs Jupitel thunder)
multihit_delay: 80

// Damaged delay rate for players (Note 2)
// (Setting to false/0  will be like always endure)
player_damage_delay_rate: 100

// Should race or element be used to consider someone undead?
// 0 = element undead
// 1 = race undead
// 2 = both (either one works)
undead_detect_type: 0

// Does HP recover if hit by an attribute that's same as your own? (Note 1)
// (Will not work in Renewal)
attribute_recover: false

// What is the minimum and maximum hitrate of normal attacks?
min_hitrate: 5
max_hitrate: 100

// Type of penalty that is applied to FLEE when more than agi_penalty_count monsters are targetting player
// 0 = no penalty is applied
// 1 = agi_penalty_num is reduced from FLEE as a %
// 2 = agi_penalty_num is reduced from FLEE as an exact amount
agi_penalty_type: 1

// When agi penalty is enabled, to whom it should apply to? (Note 3)
// By default, only players get the penalty.
agi_penalty_target: 1

// Amount of enemies required to be targetting player before FLEE begins to be penalized
agi_penalty_count: 3

// Amount of FLEE penalized per each attacking monster more than agi_penalty_count
agi_penalty_num: 10

// Type of penalty that is applied to both equipment and vit DEF when more than vit_penalty_count monsters are targetting player
// 0 = no penalty is applied
// 1 = vit_penalty_num is reduced from DEF as a %
// 2 = vit_penalty_num is reduced from DEF as an exact amount
vit_penalty_type: 1

// When vit penalty is enabled, to whom it should apply to? (Note 3)
// By default, only players get the penalty.
vit_penalty_target: 1

// Amount of enemies required to be targetting player before defense begins to be penalized
vit_penalty_count: 3

// Amount of VIT defense penalized per each attacking monster more than vit_penalty_count
vit_penalty_num: 5

// Use alternate method of DEF calculation for physical attacks.
// With 0, disabled (use normal def% reduction with further def2 reduction)
// At 1 or more defense is subtraction of (DEF* value).
// eg: 10 + 50 def becomes 0 + (10*type + 50)
weapon_defense_type: 0

// MDEF, same as above....(MDEF*value)
magic_defense_type: 0

// Change attacker's direction to face opponent on every attack? (Note 3)
// NOTE: On official servers knockback of some skills like Firewall is always based on the
// last direction walked. Even when attacking in a completely different direction, the
// knockback direction won't change, so e.g. if you walk north and then attack an enemy to
// the south you will still be knocked back to the south by Firewall. Immobile monsters
// will always be knocked back to the south as their default direction is north.
attack_direction_change: 0

// For those who is set, their innate attack element is "not elemental"
// (100% versus on all defense-elements) (Note 3)
// NOTE: This is the setting that makes it so non-players can hit for full
// damage against Ghost-type targets with normal attacks (eg: vs. Ghostring).
attack_attr_none: 14

// Rate at which equipment can break (base rate before it's modified by any skills)
// 1 = 0.01% chance. Default for official servers: 0
equip_natural_break_rate: 0

// Overall rate of which your own equipment can break. (Note 2)
// This rate affects penalty breaking rate of skills such as power-thrust and your natural breaking rate
// (from equip_natural_break_rate). If a Sage's endow skill fails and this is above 0, the selected char's
// weapon will be broken.
equip_self_break_rate: 100

// Overall rate at which you can break target's equipment. (Note 2)
// This affects the behaviour of skills like acid terror and meltdown
equip_skill_break_rate: 100

// Do weapon attacks have a attack speed delay before actual damage is applied? (Note 1)
// NOTE: The official setting is true, even thought it degrades performance a bit.
delay_battle_damage: true

// Are arrows/ammo consumed when used on a bow/gun?
// 0 = No
// 1 = Yes
// 2 = Yes even for skills that do not specify arrow consumption when said
//     skill is weapon-based and used with ranged weapons (auto-guesses which
//     skills should consume ammo when it's acquired via a card or plagiarize)
arrow_decrement: 1

// Should the item script bonus 'Autospell' check for range/obstacles before casting?
// Official behavior is false, setting this to true will make skills use their defined
// range. For example, Sonic Blow requires a 2 cell distance before autocasting is allowed.
// This setting also affects autospellwhenhit.
autospell_check_range: false

// If both the attacker and the target are on the same tile, should the target be knocked back to the left?
// Official behavior is true, setting this to false will knock the target back behind the attacker.
knockback_left: true

// Should the target be able of dodging damage by snapping away to the edge of the screen?
// Official behavior is false
snap_dodge: false
