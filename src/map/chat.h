// Copyright (c) Athena Dev Teams - Licensed under GNU GPL
// For more information, see LICENCE in the main folder
#ifndef _CHAT_H_
#define _CHAT_H_
#include "map.h" // struct block_list, CHATROOM_TITLE_SIZE
struct map_session_data;
struct chat_data;


struct chat_data {
	struct block_list bl;            // data for this map object
	char title[CHATROOM_TITLE_SIZE]; // room title 
	char pass[CHATROOM_PASS_SIZE];   // password
	bool pub;                        // private/public flag
	uint8 users;                     // current user count
	uint8 limit;                     // join limit
	uint8 trigger;                   // number of users needed to trigger event
	uint32 zeny;						 // required zeny to join
	uint32 minLvl;					 // minimum base level to join
	uint32 maxLvl;					 // maximum base level allowed to join
	struct map_session_data* usersd[20];
	struct block_list* owner;
	char npc_event[EVENT_NAME_LENGTH];
	DBMap* kick_list;				//DBMap of users who were kicked from this chat
};




/*=====================================
* Interface : chat.h 
* Generated by HerculesInterfaceMaker
* created by Susu
*-------------------------------------*/
struct chat_interface {
	/* funcs */
	
	int (*createpcchat) (struct map_session_data* sd, const char* title, const char* pass, int limit, bool pub);
	int (*joinchat) (struct map_session_data* sd, int chatid, const char* pass);
	int (*leavechat) (struct map_session_data* sd, bool kicked);
	int (*changechatowner) (struct map_session_data* sd, const char* nextownername);
	int (*changechatstatus) (struct map_session_data* sd, const char* title, const char* pass, int limit, bool pub);
	int (*kickchat) (struct map_session_data* sd, const char* kickusername);
	
	int (*createnpcchat) (struct npc_data* nd, const char* title, int limit, bool pub, int trigger, const char* ev, int zeny, int minLvl, int maxLvl);
	int (*deletenpcchat) (struct npc_data* nd);
	int (*enableevent) (struct chat_data* cd);
	int (*disableevent) (struct chat_data* cd);
	int (*npckickall) (struct chat_data* cd);
} chat_s;

struct chat_interface *chat;

void chat_defaults(void);

#endif /* _CHAT_H_ */
