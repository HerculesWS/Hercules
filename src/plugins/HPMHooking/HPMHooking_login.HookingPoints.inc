// Copyright (c) Hercules Dev Team, licensed under GNU GPL.
// See the LICENSE file
//
// NOTE: This file was auto-generated and should never be manually edited,
//       as it will get overwritten.

struct HookingPointData HookingPoints[] = {
/* login */
	{ HP_POP(login->mmo_auth, HP_login_mmo_auth) },
	{ HP_POP(login->mmo_auth_new, HP_login_mmo_auth_new) },
	{ HP_POP(login->waiting_disconnect_timer, HP_login_waiting_disconnect_timer) },
	{ HP_POP(login->create_online_user, HP_login_create_online_user) },
	{ HP_POP(login->add_online_user, HP_login_add_online_user) },
	{ HP_POP(login->remove_online_user, HP_login_remove_online_user) },
	{ HP_POP(login->online_db_setoffline, HP_login_online_db_setoffline) },
	{ HP_POP(login->online_data_cleanup_sub, HP_login_online_data_cleanup_sub) },
	{ HP_POP(login->online_data_cleanup, HP_login_online_data_cleanup) },
	{ HP_POP(login->sync_ip_addresses, HP_login_sync_ip_addresses) },
	{ HP_POP(login->check_encrypted, HP_login_check_encrypted) },
	{ HP_POP(login->check_password, HP_login_check_password) },
	{ HP_POP(login->lan_subnetcheck, HP_login_lan_subnetcheck) },
	{ HP_POP(login->lan_config_read, HP_login_lan_config_read) },
	{ HP_POP(login->fromchar_accinfo, HP_login_fromchar_accinfo) },
	{ HP_POP(login->fromchar_account, HP_login_fromchar_account) },
	{ HP_POP(login->fromchar_account_update_other, HP_login_fromchar_account_update_other) },
	{ HP_POP(login->fromchar_auth_ack, HP_login_fromchar_auth_ack) },
	{ HP_POP(login->fromchar_ban, HP_login_fromchar_ban) },
	{ HP_POP(login->fromchar_change_sex_other, HP_login_fromchar_change_sex_other) },
	{ HP_POP(login->fromchar_pong, HP_login_fromchar_pong) },
	{ HP_POP(login->fromchar_parse_auth, HP_login_fromchar_parse_auth) },
	{ HP_POP(login->fromchar_parse_update_users, HP_login_fromchar_parse_update_users) },
	{ HP_POP(login->fromchar_parse_request_change_email, HP_login_fromchar_parse_request_change_email) },
	{ HP_POP(login->fromchar_parse_account_data, HP_login_fromchar_parse_account_data) },
	{ HP_POP(login->fromchar_parse_ping, HP_login_fromchar_parse_ping) },
	{ HP_POP(login->fromchar_parse_change_email, HP_login_fromchar_parse_change_email) },
	{ HP_POP(login->fromchar_parse_account_update, HP_login_fromchar_parse_account_update) },
	{ HP_POP(login->fromchar_parse_ban, HP_login_fromchar_parse_ban) },
	{ HP_POP(login->fromchar_parse_change_sex, HP_login_fromchar_parse_change_sex) },
	{ HP_POP(login->fromchar_parse_account_reg2, HP_login_fromchar_parse_account_reg2) },
	{ HP_POP(login->fromchar_parse_unban, HP_login_fromchar_parse_unban) },
	{ HP_POP(login->fromchar_parse_account_online, HP_login_fromchar_parse_account_online) },
	{ HP_POP(login->fromchar_parse_account_offline, HP_login_fromchar_parse_account_offline) },
	{ HP_POP(login->fromchar_parse_online_accounts, HP_login_fromchar_parse_online_accounts) },
	{ HP_POP(login->fromchar_parse_request_account_reg2, HP_login_fromchar_parse_request_account_reg2) },
	{ HP_POP(login->fromchar_parse_update_wan_ip, HP_login_fromchar_parse_update_wan_ip) },
	{ HP_POP(login->fromchar_parse_all_offline, HP_login_fromchar_parse_all_offline) },
	{ HP_POP(login->fromchar_parse_change_pincode, HP_login_fromchar_parse_change_pincode) },
	{ HP_POP(login->fromchar_parse_wrong_pincode, HP_login_fromchar_parse_wrong_pincode) },
	{ HP_POP(login->fromchar_parse_accinfo, HP_login_fromchar_parse_accinfo) },
	{ HP_POP(login->parse_fromchar, HP_login_parse_fromchar) },
	{ HP_POP(login->connection_problem, HP_login_connection_problem) },
	{ HP_POP(login->kick, HP_login_kick) },
	{ HP_POP(login->auth_ok, HP_login_auth_ok) },
	{ HP_POP(login->auth_failed, HP_login_auth_failed) },
	{ HP_POP(login->login_error, HP_login_login_error) },
	{ HP_POP(login->parse_ping, HP_login_parse_ping) },
	{ HP_POP(login->parse_client_md5, HP_login_parse_client_md5) },
	{ HP_POP(login->parse_client_login, HP_login_parse_client_login) },
	{ HP_POP(login->send_coding_key, HP_login_send_coding_key) },
	{ HP_POP(login->parse_request_coding_key, HP_login_parse_request_coding_key) },
	{ HP_POP(login->char_server_connection_status, HP_login_char_server_connection_status) },
	{ HP_POP(login->parse_request_connection, HP_login_parse_request_connection) },
	{ HP_POP(login->parse_login, HP_login_parse_login) },
};

int HookingPointsLenMax = 42;
